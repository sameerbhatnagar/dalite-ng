{"version":3,"file":"student.min.js","sources":["peerinst/static/peerinst/js/ajax.js","peerinst/static/peerinst/js/utils.js","peerinst/static/peerinst/js/_student/index.js","peerinst/static/peerinst/js/_student/header/notifications.js"],"sourcesContent":["\"use strict\";\n\nexport function getCsrfToken() {\n  return document\n    .getElementsByName(\"csrfmiddlewaretoken\")[0]\n    .getAttribute(\"value\");\n}\n\nexport function buildReq(data, method) {\n  if (method.toLowerCase() === \"get\") {\n    return {\n      method: method.toUpperCase(),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else if (method.toLowerCase() === \"post\") {\n    const body = data ? JSON.stringify(data) : \"\";\n    return {\n      method: method.toUpperCase(),\n      body: body,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else {\n    throw Error(`Method ${method} not implemented yet.`);\n  }\n}\n\nexport function updateAssignmentQuestionList(\n  url,\n  questionId,\n  assignmentIdentifier,\n) {\n  const token = getCsrfToken();\n  const data = {\n    question_id: questionId,\n    assignment_identifier: assignmentIdentifier,\n  };\n  const req = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    credentials: \"include\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"X-CSRFToken\": token,\n    },\n  };\n  fetch(url, req)\n    .then(function(resp) {\n      if (!resp.ok) {\n        console.log(resp);\n      } else {\n        // Manipulate DOM\n        const list = document.getElementById(\"question-list\");\n        const card = document.getElementById(questionId);\n        if ($.contains(list, card)) {\n          $(\"#\" + questionId).remove();\n        } else {\n          $(\"#\" + questionId)\n            .find($(\".update-questions-btn\"))\n            .html(\"delete\");\n          const q = $(\"#\" + questionId).detach();\n          q.appendTo($(\"#question-list\"));\n          $(\"#empty-assignment-list\").remove();\n          $(\".search-set\").each(function() {\n            $(this) // eslint-disable-line no-invalid-this\n              .find(\".filter-count\")\n              .empty()\n              .append($(this).find(\".mdc-card:visible\").length); // eslint-disable-line no-invalid-this,max-len\n          });\n          $(\".search-set\").each(function() {\n            $(this) // eslint-disable-line no-invalid-this\n              .find(\".filter-count-total\")\n              .empty()\n              .append($(this).find(\".mdc-card\").length); // eslint-disable-line no-invalid-this,max-len\n          });\n        }\n      }\n    })\n    .catch(function(err) {\n      console.log(err);\n    });\n}\n","// @flow\n\"use strict\";\n\nexport function clear(node: HTMLElement): HTMLElement {\n  while (node.hasChildNodes()) {\n    // $FlowFixMe\n    node.removeChild(node.lastChild);\n  }\n  return node;\n}\n\nexport function formatDatetime(datetime: Date): string {\n  return (\n    datetime.toLocaleString(\"en-ca\", { year: \"numeric\" }) +\n    \"-\" +\n    datetime.toLocaleString(\"en-ca\", { month: \"2-digit\" }) +\n    \"-\" +\n    datetime.toLocaleString(\"en-ca\", { day: \"2-digit\" }) +\n    \" \" +\n    datetime.toLocaleString(\"en-ca\", { hour: \"2-digit\", hour12: false }) +\n    \":\" +\n    datetime.toLocaleString(\"en-ca\", { minute: \"2-digit\" })\n  );\n}\n\nexport function createSvg(name: string, useSprite: boolean = true): Element {\n  const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n  const use = document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\");\n  use.setAttributeNS(\n    \"http://www.w3.org/1999/xlink\",\n    \"href\",\n    svgLink(name, useSprite),\n  );\n  svg.append(use);\n  return svg;\n}\n\nexport function svgLink(name: string, useSprite: boolean = true): string {\n  if (useSprite) {\n    return `#${name}`;\n  } else {\n    return (\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      \"/static/peerinst/icons.svg#\" +\n      name\n    );\n  }\n}\n\nexport function showAlert(msg: string) {\n  const fullPageBox = document.createElement(\"div\");\n  fullPageBox.classList.add(\"alert-box__full-page\");\n  fullPageBox.addEventListener(\"click\", (event: MouseEvent) => {\n    event.stopPropagation();\n    fullPageBox.parentNode?.removeChild(fullPageBox);\n  });\n  document.body?.appendChild(fullPageBox);\n\n  const box = document.createElement(\"div\");\n  box.classList.add(\"alert-box__box\");\n  box.addEventListener(\"click\", (event: MouseEvent) =>\n    event.stopPropagation(),\n  );\n  fullPageBox.appendChild(box);\n\n  const span = document.createElement(\"span\");\n  span.classList.add(\"alert-box__msg\");\n  span.textContent = msg;\n  box.appendChild(span);\n\n  const ok = document.createElement(\"button\");\n  ok.classList.add(\"alert-box__btn\", \"mdc-button\", \"mdc-button--unelevated\");\n  ok.textContent = \"Ok\";\n  box.appendChild(ok);\n}\n","import { buildReq } from \"../ajax.js\";\nimport { clear } from \"../utils.js\";\n\n/*********/\n/* model */\n/*********/\n\nlet model;\n\nfunction initModel(data) {\n  model = {\n    expiryBlinkingDelay: data.expiry_blinking_delay,\n    joiningGroup: false,\n    newStudent: data.new_student,\n    student: {\n      username: data.student.username,\n      email: data.student.email,\n      memberSince: new Date(data.student.member_since),\n      tos: {\n        sharing: data.student.tos.sharing,\n        signedOn: new Date(data.student.tos.signed_on),\n      },\n    },\n    groups: data.groups.map(group => ({\n      name: group.name,\n      title: group.title,\n      notifications: group.notifications,\n      memberOf: group.member_of,\n      assignments: group.assignments.map(assignment => ({\n        title: assignment.title,\n        dueDate: new Date(assignment.due_date),\n        link: assignment.link,\n        results: {\n          grade: assignment.results.grade,\n          n: assignment.results.n,\n        },\n        done: assignment.done,\n        almostExpired: assignment.almost_expired,\n      })),\n      studentId: group.student_id,\n      studentIdNeeded: group.student_id_needed,\n    })),\n    urls: {\n      tosModify: data.urls.tos_modify,\n      joinGroup: data.urls.join_group,\n      leaveGroup: data.urls.leave_group,\n      saveStudentId: data.urls.save_student_id,\n      studentToggleGroupnotifications:\n        data.urls.student_toggle_group_notifications,\n    },\n    translations: {\n      assignmentAboutToExpire: data.translations.assignment_about_to_expire,\n      assignmentExpired: data.translations.assignment_expired,\n      cancel: data.translations.cancel,\n      completed: data.translations.completed,\n      day: data.translations.day,\n      days: data.translations.days,\n      dueOn: data.translations.due_on,\n      editStudentId: data.translations.edit_student_id,\n      expired: data.translations.expired,\n      goToAssignment: data.translations.go_to_assignment,\n      grade: data.translations.grade,\n      hour: data.translations.hour,\n      hours: data.translations.hours,\n      leave: data.translations.leave,\n      leaveGroupQuestion: data.translations.leave_group_question,\n      leaveGroupText: data.translations.leave_group_text,\n      leaveGroupTitle: data.translations.leave_group_title,\n      minute: data.translations.minute,\n      minutes: data.translations.minutes,\n      noAssignments: data.translations.no_assignments,\n      notificationsBell: data.translations.notifications_bell,\n      notSharing: data.translations.not_sharing,\n      sharing: data.translations.sharing,\n      studentId: data.translations.student_id,\n      studentIdNeeded: data.translations.student_id_needed,\n    },\n  };\n}\n\n/**********/\n/* update */\n/**********/\n\nfunction handleStudentIdKeyDown(key, group, node) {\n  if (key === \"Enter\") {\n    saveStudentId(group, node);\n  } else if (key === \"Escape\") {\n    stopEditStudentId(group, node);\n  }\n}\n\nfunction saveStudentId(group, node) {\n  const url = model.urls.saveStudentId;\n  const input = node.querySelector(\"input\");\n\n  const data = {\n    student_id: input.value,\n    group_name: group.name,\n  };\n\n  const req = buildReq(data, \"post\");\n  fetch(url, req)\n    .then(resp => resp.json())\n    .then(function(data) {\n      group.studentId = data.student_id;\n      stopEditStudentId(group, node);\n    })\n    .catch(function(err) {\n      stopEditStudentId(group, node);\n      console.log(err);\n    });\n}\n\nfunction toggleGroupNotifications(group, bell) {\n  const url = model.urls.studentToggleGroupnotifications;\n  const data = {\n    group_name: group.name,\n  };\n  const req = buildReq(data, \"post\");\n  fetch(url, req)\n    .then(resp => resp.json())\n    .then(function(data) {\n      group.notifications = data.notifications;\n      if (group.notifications) {\n        bell.textContent = \"notifications\";\n        bell.classList.remove(\"student-group--notifications__disabled\");\n      } else {\n        bell.textContent = \"notifications_off\";\n        bell.classList.add(\"student-group--notifications__disabled\");\n      }\n    })\n    .catch(function(err) {\n      console.log(err);\n    });\n}\n\nfunction leaveGroup(group, groupNode) {\n  const url = model.urls.leaveGroup;\n  const data = {\n    group_name: group.name,\n  };\n\n  const req = buildReq(data, \"post\");\n  fetch(url, req)\n    .then(function(resp) {\n      if (resp.ok) {\n        model.groups.filter(g => g.name === group.name)[0].memberOf = false;\n        groupsView();\n      } else {\n        console.log(resp);\n      }\n    })\n    .catch(err => console.log(err));\n}\n\nfunction copyStudentIdToClipboard(group, node) {\n  navigator.clipboard\n    .writeText(group.studentId)\n    .then(() => showCopyBubble(node));\n}\n\nexport function goToAssignment(\n  group: { studentId: string, studentIdNeeded: boolean, name: string },\n  assignment: { link: string },\n) {\n  if (!group.studentIdNeeded || group.studentId !== \"\") {\n    window.location = assignment.link;\n  } else {\n    toggleStudentIdNeededView(group);\n  }\n}\n\nexport function modifyTos() {\n  const url = model.urls.tosModify + \"?next=\" + window.location.href;\n  window.location.href = url;\n}\n\nexport function toggleJoinGroup() {\n  model.joiningGroup = !model.joiningGroup;\n  joinGroupView();\n}\n\nexport function handleJoinGroupLinkInput(event) {\n  if (event.key === \"Enter\") {\n    joinGroup();\n  } else {\n    if (event.currentTarget.value) {\n      joinGroupErrorView(\"\", false);\n    }\n    verifyJoinGroupDisabledStatus();\n  }\n}\n\nexport function joinGroup() {\n  const url = model.urls.joinGroup;\n  const input = document.querySelector(\"#student-add-group--box input\");\n  const select = document.querySelector(\"#student-add-group--box select\");\n\n  let data;\n  if (input.value) {\n    data = {\n      username: model.student.username,\n      group_link: input.value,\n    };\n  } else if (model.groups.some(group => !group.memberOf)) {\n    data = {\n      username: model.student.username,\n      group_name: select.value,\n    };\n  } else {\n    joinGroupErrorView(\"A URL is needed.\", true);\n    return;\n  }\n\n  const req = buildReq(data, \"post\");\n  fetch(url, req)\n    .then(resp => resp.json())\n    .then(function(group) {\n      input.value = \"\";\n      if (model.groups.some(g => g.name === group.name)) {\n        model.groups.filter(g => g.name === group.name)[0].memberOf =\n          group.member_of;\n      } else {\n        model.groups.push({\n          name: group.name,\n          title: group.title,\n          notifications: group.notifications,\n          memberOf: group.member_of,\n          assignments: group.assignments.map(assignment => ({\n            title: assignment.title,\n            dueDate: new Date(assignment.due_date),\n            link: assignment.link,\n            results: {\n              n: assignment.results.n,\n              grade: assignment.results.grade,\n            },\n            done: assignment.done,\n            almostExpired: assignment.almost_expired,\n          })),\n          studentId: group.student_id,\n          studentIdNeeded: group.student_id_needed,\n        });\n      }\n      toggleJoinGroup();\n      groupsView();\n    })\n    .catch(function(err) {\n      joinGroupErrorView(\"There is no group with that link.\", true);\n    });\n}\n\n/********/\n/* view */\n/********/\n\nfunction view(groupStudentId) {\n  identityView();\n  groupsView(groupStudentId);\n  joinGroupView();\n}\n\nfunction identityView() {\n  const emailSpan = document.getElementById(\"student-email\");\n  emailSpan.textContent = model.student.email;\n\n  const memberSinceSpan = document.getElementById(\"student-member-since\");\n  memberSinceSpan.textContent = model.student.memberSince.toLocaleString(\n    \"en-ca\",\n    {\n      month: \"short\",\n      day: \"numeric\",\n      year: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    },\n  );\n\n  const tosSharingIcon = document.getElementById(\"student-tos-sharing--icon\");\n  const tosSharingSpan = document.getElementById(\n    \"student-tos-sharing--sharing\",\n  );\n  if (model.student.tos.sharing) {\n    tosSharingIcon.textContent = \"check\";\n    tosSharingSpan.textContent = model.translations.sharing;\n  } else {\n    tosSharingIcon.textContent = \"clear\";\n    tosSharingSpan.textContent = model.translations.notSharing;\n  }\n\n  const tosSignedOnSpan = document.getElementById(\"student-tos-signed-on\");\n  tosSignedOnSpan.textContent = model.student.tos.signedOn.toLocaleString(\n    \"en-ca\",\n    {\n      month: \"short\",\n      day: \"numeric\",\n      year: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    },\n  );\n}\n\nfunction joinGroupView() {\n  const box = document.getElementById(\"student-add-group--box\");\n  const input = document.querySelector(\"#student-add-group--box input\");\n  if (model.joiningGroup) {\n    joinGroupsSelectView();\n    box.style.display = \"flex\";\n  } else {\n    box.style.display = \"none\";\n    input.value = \"\";\n  }\n  joinGroupErrorView(\"\", false);\n}\n\nfunction joinGroupErrorView(msg: string, show: boolean) {\n  const error = document.getElementById(\"student-add-group__error\");\n  const input = document.querySelector(\"#student-add-group--box input\");\n  error.textContent = msg;\n  if (show) {\n    error.removeAttribute(\"hidden\");\n    input.classList.add(\"input--error\");\n  } else {\n    error.setAttribute(\"hidden\", \"\");\n    input.classList.remove(\"input--error\");\n  }\n}\n\nfunction joinGroupsSelectView() {\n  const groupsSelect = document.getElementById(\"student-old-groups\");\n  clear(groupsSelect);\n  const oldGroups = model.groups.filter(group => !group.memberOf);\n  if (oldGroups.length) {\n    oldGroups.map(group =>\n      groupsSelect.appendChild(joinGroupSelectView(group)),\n    );\n    groupsSelect.style.display = \"inline-block\";\n    verifyJoinGroupDisabledStatus();\n  } else {\n    groupsSelect.style.display = \"none\";\n  }\n}\n\nfunction joinGroupSelectView(group) {\n  const option = document.createElement(\"option\");\n  option.value = group.name;\n  option.textContent = group.title;\n  return option;\n}\n\nfunction verifyJoinGroupDisabledStatus() {\n  const input = document.querySelector(\"#student-add-group--box input\");\n  const select = document.querySelector(\"#student-add-group--box select\");\n\n  if (input.value) {\n    select.disabled = true;\n  } else {\n    select.disabled = false;\n  }\n}\n\nfunction groupsView(groupStudentId: string = \"\") {\n  const groups = document.getElementById(\"student-groups\");\n  clear(groups);\n  model.groups\n    .filter(group => group.memberOf)\n    .map(group => groups.appendChild(groupView(group)));\n  if (groupStudentId) {\n    for (let i = 0; i < model.groups.length; i++) {\n      if (model.groups[i].name == groupStudentId) {\n        toggleStudentIdNeededView(model.groups[i]);\n        break;\n      }\n    }\n  }\n}\n\nfunction groupView(group) {\n  const div = document.createElement(\"div\");\n  div.classList.add(\"student-group\");\n  div.setAttribute(\"data-group\", group.name);\n\n  div.appendChild(groupTitleView(group));\n  div.appendChild(groupAssignmentsView(group));\n\n  return div;\n}\n\nfunction groupTitleView(group) {\n  const div = document.createElement(\"div\");\n  div.classList.add(\"student-group--title\");\n\n  if (group.studentIdNeeded) {\n    div.appendChild(groupTitleIdView(group));\n  }\n\n  const title = document.createElement(\"h3\");\n  title.textContent = group.title;\n  div.appendChild(title);\n\n  const icons = document.createElement(\"div\");\n  icons.classList.add(\"student-group--icons\");\n  div.appendChild(icons);\n\n  const notifications = document.createElement(\"div\");\n  notifications.classList.add(\"student-group--notifications\");\n  icons.appendChild(notifications);\n\n  const bell = document.createElement(\"i\");\n  bell.classList.add(\"material-icons\", \"md-28\");\n  bell.title = model.translations.notificationsBell;\n  bell.addEventListener(\"click\", () => toggleGroupNotifications(group, bell));\n  if (group.notifications) {\n    bell.textContent = \"notifications\";\n  } else {\n    bell.textContent = \"notifications_off\";\n    bell.classList.add(\"student-group--notifications__disabled\");\n  }\n  notifications.appendChild(bell);\n\n  icons.appendChild(leaveGroupView(group, div));\n\n  return div;\n}\n\nfunction groupTitleIdView(group) {\n  const div = document.createElement(\"div\");\n  div.classList.add(\"student-group--id\");\n\n  const copyIcon = document.createElement(\"i\");\n  copyIcon.classList.add(\"material-icons\", \"md-28\", \"student-group--id__copy\");\n  copyIcon.style.display = \"flex\";\n  copyIcon.textContent = \"file_copy\";\n  copyIcon.addEventListener(\"click\", () =>\n    copyStudentIdToClipboard(group, div),\n  );\n  div.appendChild(copyIcon);\n\n  const studentId = document.createElement(\"span\");\n  studentId.classList.add(\"student-group--id__id\");\n  studentId.style.display = \"inline-block\";\n  studentId.textContent = group.studentId;\n  studentId.title = model.translations.studentId;\n  studentId.addEventListener(\"click\", () => editStudentId(group, div));\n  div.appendChild(studentId);\n\n  const input = document.createElement(\"input\");\n  input.classList.add(\"student-group--id__input\");\n  input.value = group.schoolId;\n  input.style.display = \"none\";\n  input.addEventListener(\"keydown\", event =>\n    handleStudentIdKeyDown(event.key, group, div),\n  );\n  div.appendChild(input);\n\n  const editIcon = document.createElement(\"i\");\n  editIcon.classList.add(\"material-icons\", \"md-28\", \"student-group--id__edit\");\n  editIcon.style.display = \"flex\";\n  editIcon.textContent = \"edit\";\n  editIcon.title = model.translations.editStudentId;\n  editIcon.addEventListener(\"click\", () => editStudentId(group, div));\n  div.appendChild(editIcon);\n\n  const confirmIcon = document.createElement(\"i\");\n  confirmIcon.classList.add(\n    \"material-icons\",\n    \"md-28\",\n    \"student-group--id__confirm\",\n  );\n  confirmIcon.style.display = \"none\";\n  confirmIcon.textContent = \"check\";\n  confirmIcon.addEventListener(\"click\", () => saveStudentId(group, div));\n  div.appendChild(confirmIcon);\n\n  const cancelIcon = document.createElement(\"i\");\n  cancelIcon.classList.add(\n    \"material-icons\",\n    \"md-28\",\n    \"student-group--id__cancel\",\n  );\n  cancelIcon.style.display = \"none\";\n  cancelIcon.textContent = \"close\";\n  cancelIcon.addEventListener(\"click\", () => stopEditStudentId(group, div));\n  div.appendChild(cancelIcon);\n\n  return div;\n}\n\nfunction groupAssignmentsView(group) {\n  const div = document.createElement(\"div\");\n  div.classList.add(\"student-group--assignments\");\n  if (group.assignments.length) {\n    const ul = document.createElement(\"ul\");\n    group.assignments.map(assignment =>\n      ul.appendChild(groupAssignmentView(assignment, group)),\n    );\n    div.appendChild(ul);\n  } else {\n    const span = document.createElement(\"span\");\n    span.classList.add(\"student-group--no-assignments\");\n    span.textContent = model.translations.noAssignments;\n    div.appendChild(span);\n  }\n  return div;\n}\n\nfunction groupAssignmentView(assignment, group) {\n  const a = document.createElement(\"a\");\n  a.href = assignment.link;\n\n  const li = document.createElement(\"li\");\n  li.classList.add(\"student-group--assignment\");\n  if (assignment.done) {\n    li.classList.add(\"student-group--assignment-complete\");\n  }\n  li.addEventListener(\"click\", (event: MouseEvent) =>\n    goToAssignment(group, assignment),\n  );\n\n  const almostExpiredMin = new Date(assignment.dueDate);\n  almostExpiredMin.setDate(\n    almostExpiredMin.getDate() - model.expiryBlinkingDelay,\n  );\n\n  const iconSpan = document.createElement(\"span\");\n  iconSpan.classList.add(\"student-group--assignment-icon\");\n  li.appendChild(iconSpan);\n  const icon = document.createElement(\"i\");\n  icon.classList.add(\"material-icons\", \"md-28\");\n  if (assignment.done) {\n    iconSpan.title = model.translations.goToAssignment;\n    icon.textContent = \"assignment_turned_in\";\n  } else if (assignment.dueDate <= new Date(Date.now())) {\n    iconSpan.title = model.translations.assignmentExpired;\n    icon.textContent = \"assignment_late\";\n  } else if (almostExpiredMin <= new Date(Date.now())) {\n    iconSpan.title = model.translations.assignmentAboutToExpire;\n    icon.textContent = \"assignment_late\";\n  } else {\n    iconSpan.title = model.translations.goToAssignment;\n    icon.textContent = \"assignment\";\n  }\n  iconSpan.appendChild(icon);\n\n  const gradeSpan = document.createElement(\"span\");\n  gradeSpan.classList.add(\"student-group--assignment-questions\");\n  gradeSpan.title = model.translations.grade;\n  li.appendChild(gradeSpan);\n  const grade = document.createElement(\"span\");\n  grade.textContent = assignment.results.grade;\n  gradeSpan.appendChild(grade);\n  const slash = document.createElement(\"span\");\n  slash.textContent = \"/\";\n  gradeSpan.appendChild(slash);\n  const n = document.createElement(\"span\");\n  n.textContent = assignment.results.n;\n  gradeSpan.appendChild(n);\n\n  const title = document.createElement(\"span\");\n  title.classList.add(\"student-group--assignment-title\");\n  title.title = model.translations.goToAssignment;\n  title.textContent = assignment.title;\n  li.appendChild(title);\n\n  const date = document.createElement(\"span\");\n  date.classList.add(\"student-group--assignment-date\");\n  if (assignment.done) {\n    date.removeAttribute(\"title\");\n    date.textContent = model.translations.completed;\n  } else if (assignment.dueDate <= new Date(Date.now())) {\n    date.title = model.translations.assignmentExpired;\n    date.textContent = model.translations.expired;\n  } else {\n    date.title =\n      model.translations.dueOn +\n      \" \" +\n      assignment.dueDate.toLocaleString(\"en-ca\", {\n        month: \"short\",\n        day: \"numeric\",\n        year: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      });\n    const dateIcon = document.createElement(\"i\");\n    dateIcon.classList.add(\"material-icons\", \"md-18\");\n    dateIcon.textContent = \"access_time\";\n    date.appendChild(dateIcon);\n    const remainingTimeSpan = document.createElement(\"span\");\n    remainingTimeSpan.textContent = timeuntil(\n      assignment.dueDate,\n      new Date(Date.now()),\n    );\n    date.appendChild(remainingTimeSpan);\n    if (almostExpiredMin <= new Date(Date.now())) {\n      dateIcon.classList.add(\"blinking\");\n    }\n  }\n  li.appendChild(date);\n  return li;\n}\n\nfunction leaveGroupView(group, groupNode) {\n  const div = document.createElement(\"div\");\n  div.classList.add(\"student-group--remove\");\n  div.title = model.translations.leaveGroupTitle;\n\n  const icon = document.createElement(\"i\");\n  icon.classList.add(\"material-icons\", \"md-28\");\n  icon.addEventListener(\"click\", () => toggleLeaveGroup(groupNode));\n  icon.textContent = \"remove_circle_outline\";\n  div.appendChild(icon);\n\n  const box = document.createElement(\"div\");\n  box.classList.add(\"student-group--remove-confirmation-box\");\n  box.style.display = \"none\";\n  box.addEventListener(\"click\", function(event: MouseEvent) {\n    event.stopPropagation;\n    toggleLeaveGroup(groupNode);\n  });\n  div.appendChild(box);\n\n  const boxDiv = document.createElement(\"div\");\n  boxDiv.addEventListener(\"click\", (event: MouseEvent) =>\n    event.stopPropagation(),\n  );\n  box.appendChild(boxDiv);\n\n  const title = document.createElement(\"h3\");\n  title.textContent = model.translations.leaveGroupTitle + \" \" + group.title;\n  boxDiv.appendChild(title);\n\n  const text = document.createElement(\"p\");\n  text.textContent = model.translations.leaveGroupText;\n  boxDiv.appendChild(text);\n\n  const question = document.createElement(\"p\");\n  question.textContent = model.translations.leaveGroupQuestion;\n  boxDiv.appendChild(question);\n\n  const leave = document.createElement(\"button\");\n  leave.classList.add(\"mdc-button\", \"mdc-button--unelevated\");\n  leave.addEventListener(\"click\", () => leaveGroup(group, groupNode));\n  leave.textContent = model.translations.leave;\n  boxDiv.appendChild(leave);\n\n  const cancel = document.createElement(\"button\");\n  cancel.classList.add(\"mdc-button\");\n  cancel.addEventListener(\"click\", () => toggleLeaveGroup(groupNode));\n  cancel.textContent = model.translations.cancel;\n  boxDiv.appendChild(cancel);\n\n  return div;\n}\n\nfunction editStudentId(group, node) {\n  const span = node.querySelector(\".student-group--id__id\");\n  const input = node.querySelector(\".student-group--id__input\");\n  const copyBtn = node.querySelector(\".student-group--id__copy\");\n  const editBtn = node.querySelector(\".student-group--id__edit\");\n  const confirmBtn = node.querySelector(\".student-group--id__confirm\");\n  const cancelBtn = node.querySelector(\".student-group--id__cancel\");\n\n  input.value = group.studentId;\n\n  span.style.display = \"none\";\n  copyBtn.style.display = \"none\";\n  editBtn.style.display = \"none\";\n  input.style.display = \"inline-block\";\n  confirmBtn.style.display = \"flex\";\n  cancelBtn.style.display = \"flex\";\n\n  input.focus();\n  toggleStudentIdNeededView(group);\n}\n\nfunction stopEditStudentId(group, node) {\n  const span = node.querySelector(\"span\");\n  const input = node.querySelector(\"input\");\n  const copyBtn = node.querySelector(\".student-group--id__copy\");\n  const editBtn = node.querySelector(\".student-group--id__edit\");\n  const confirmBtn = node.querySelector(\".student-group--id__confirm\");\n  const cancelBtn = node.querySelector(\".student-group--id__cancel\");\n\n  span.textContent = group.studentId;\n\n  span.style.display = \"inline-block\";\n  copyBtn.style.display = \"flex\";\n  editBtn.style.display = \"flex\";\n  input.style.display = \"none\";\n  confirmBtn.style.display = \"none\";\n  cancelBtn.style.display = \"none\";\n}\n\nfunction toggleStudentIdNeededView(group) {\n  const node = document.querySelector(\n    `.student-group[data-group='${group.name}'] .student-group--id`,\n  );\n  if (\n    node.querySelector(\".student-group--id__input\")?.style.display === \"none\"\n  ) {\n    const alert = document.createElement(\"div\");\n    alert.classList.add(\"student-group--id__alert\");\n    alert.textContent = model.translations.studentIdNeeded;\n    node.appendChild(alert);\n    alert.scrollIntoView(true);\n  } else {\n    const alert = node.querySelector(\".student-group--id__alert\");\n    alert?.parentNode.removeChild(alert);\n  }\n}\n\nfunction toggleLeaveGroup(node) {\n  const box = node.querySelector(\".student-group--remove-confirmation-box\");\n  if (box.style.display == \"none\") {\n    box.style.display = \"flex\";\n  } else {\n    box.style.display = \"none\";\n  }\n}\n\nfunction showCopyBubble(node) {\n  const bubble = document.createElement(\"div\");\n  bubble.classList.add(\"bubble\");\n  bubble.textContent = \"Copied to clipboard!\";\n  node.appendChild(bubble);\n\n  setTimeout(() => node.removeChild(bubble), 600);\n}\n\n/*************/\n/* listeners */\n/*************/\n\nfunction initListeners() {\n  addLinkListeners();\n  addJoinGroupListeners();\n}\n\nfunction addLinkListeners() {\n  document\n    .getElementById(\"edit-user-btn\")\n    .addEventListener(\"click\", function() {\n      edit_user();\n    });\n  document\n    .getElementById(\"modify-tos-btn\")\n    .addEventListener(\"click\", function() {\n      modifyTos();\n    });\n}\n\nfunction addJoinGroupListeners() {\n  document\n    .querySelector(\"#student-add-group .admin-link\")\n    .addEventListener(\"click\", function() {\n      toggleJoinGroup();\n    });\n  document\n    .getElementById(\"student-add-group--box\")\n    .addEventListener(\"click\", function() {\n      event.stopPropagation;\n    });\n  document\n    .querySelector(\"#student-add-group--box > div\")\n    .addEventListener(\"click\", function() {\n      event.stopPropagation;\n    });\n  document\n    .querySelector(\"#student-add-group--box input[name='new-group']\")\n    .addEventListener(\"keyup\", function(event) {\n      handleJoinGroupLinkInput(event);\n    });\n  document\n    .getElementById(\"join-group-btn\")\n    .addEventListener(\"click\", function() {\n      joinGroup();\n    });\n  document\n    .getElementById(\"cancel-join-group-btn\")\n    .addEventListener(\"click\", function() {\n      toggleJoinGroup();\n    });\n}\n\n/*********/\n/* utils */\n/*********/\n\nfunction timeuntil(date1, date2) {\n  let diff = date1 - date2;\n  const diffDays = Math.floor(diff / 1000 / 60 / 60 / 24);\n  diff = diff - diffDays * 24 * 60 * 60 * 1000;\n  const diffHours = Math.floor(diff / 1000 / 60 / 60);\n  diff = diff - diffHours * 60 * 60 * 1000;\n  const diffMinutes = Math.floor(diff / 1000 / 60);\n  let diff_ = \"\";\n  if (diffDays > 1) {\n    diff_ = diff_ + parseInt(diffDays) + \" \" + model.translations.days + \", \";\n  } else if (diffDays === 1) {\n    diff_ = diff_ + parseInt(diffDays) + \" \" + model.translations.day + \", \";\n  }\n  if (diffHours === 1) {\n    diff_ = diff_ + parseInt(diffHours) + \" \" + model.translations.hour + \", \";\n  } else if (diffHours > 1 || diffDays) {\n    diff_ =\n      diff_ + parseInt(diffHours) + \" \" + model.translations.hours + \", \";\n  }\n  if (diffMinutes === 1) {\n    diff_ = diff_ + parseInt(diffMinutes) + \" \" + model.translations.minute;\n  } else {\n    diff_ = diff_ + parseInt(diffMinutes) + \" \" + model.translations.minutes;\n  }\n  return diff_;\n}\n\n/********/\n/* init */\n/********/\n\nexport function initStudentPage(data, groupStudentId = \"\") {\n  initModel(data);\n  view(groupStudentId);\n  initListeners();\n}\n","import { buildReq } from \"../../ajax.js\";\nimport { clear } from \"../../utils.js\";\n\n/*********/\n/* model */\n/*********/\n\nlet model;\n\nfunction initModel(data) {\n  model = {\n    notificationsOpen: false,\n    notifications: data.notifications,\n    urls: {\n      studentPage: data.urls.student_page,\n      removeNotification: data.urls.remove_notification,\n      removeNotifications: data.urls.remove_notifications,\n    },\n  };\n}\n\n/**********/\n/* update */\n/**********/\n\nfunction toggleNotifications() {\n  model.notificationsOpen = !model.notificationsOpen;\n  notificationsView();\n}\n\nfunction markNotificationRead(notification) {\n  const url = model.urls.removeNotification;\n  const data = {\n    notification_pk: notification.pk,\n  };\n  const req = buildReq(data, \"post\");\n  fetch(url, req)\n    .then(resp => resp.text())\n    .then(groupName => {\n      if (groupName) {\n        window.location =\n          model.urls.studentPage + \"?group-student-id-needed=\" + groupName;\n      } else if (notification.link) {\n        window.location = notification.link;\n      } else {\n        model.notifications.splice(\n          model.notifications.indexOf(notification),\n          1,\n        );\n        notificationsView();\n      }\n    })\n    .catch(function(err) {\n      console.log(err);\n    });\n}\n\nfunction markAllNotificationsRead() {\n  const url = model.urls.removeNotifications;\n  const req = buildReq({}, \"post\");\n  fetch(url, req)\n    .then(function(resp) {\n      if (resp.ok) {\n        model.notifications = [];\n        notificationsView();\n      }\n    })\n    .catch(function(err) {\n      console.log(err);\n    });\n}\n\n/********/\n/* view */\n/********/\n\nfunction view() {\n  notificationsView();\n}\n\nfunction notificationsView() {\n  const notifications = document.querySelector(\".notifications\");\n  const badge = notifications.querySelector(\".notifications__icon__badge\");\n  const notificationsList = notifications.querySelector(\n    \".notifications__notifications\",\n  );\n\n  if (model.notifications.length) {\n    badge.textContent = model.notifications.length;\n    badge.style.display = \"flex\";\n  } else {\n    badge.textContent = \"\";\n    badge.style.display = \"none\";\n  }\n\n  clear(notificationsList);\n  if (model.notifications.length) {\n    model.notifications.map(function(notification) {\n      notificationsList.appendChild(notificationView(notification));\n    });\n  } else {\n    notificationsList.appendChild(noNotificationView());\n  }\n\n  if (model.notificationsOpen) {\n    notifications.classList.add(\"notifications--open\");\n  } else {\n    notifications.classList.remove(\"notifications--open\");\n  }\n}\n\nfunction notificationView(notification) {\n  const div = document.createElement(\"div\");\n  div.classList.add(\"notification\");\n  div.textContent = notification.text;\n  div.addEventListener(\"click\", () => markNotificationRead(notification));\n  return div;\n}\n\nfunction noNotificationView() {\n  const div = document.createElement(\"div\");\n  div.textContent = \"No new notifications\";\n  return div;\n}\n\n/*************/\n/* listeners */\n/*************/\n\nfunction initListeners() {\n  addNotificationsOpenListener();\n  addAllNotificationsReadListener();\n}\n\nfunction addNotificationsOpenListener() {\n  document\n    .querySelector(\".notifications\")\n    .addEventListener(\"click\", function(event) {\n      event.stopPropagation();\n    });\n  document\n    .querySelector(\".notifications__icon\")\n    .addEventListener(\"click\", function(event) {\n      toggleNotifications();\n    });\n  document.body.addEventListener(\"click\", function(event) {\n    if (model.notificationsOpen) {\n      toggleNotifications();\n    }\n  });\n}\n\nfunction addAllNotificationsReadListener() {\n  document\n    .querySelector(\".notifications__read-all-btn\")\n    .addEventListener(\"click\", markAllNotificationsRead);\n}\n\n/********/\n/* init */\n/********/\n\nexport function init(url) {\n  const req = buildReq(null, \"get\");\n  fetch(url, req)\n    .then(resp => resp.json())\n    .then(function(data) {\n      initModel(data);\n      initListeners();\n      view();\n    })\n    .catch(err => console.log(err));\n}\n"],"names":["getCsrfToken","document","getElementsByName","getAttribute","buildReq","data","method","toLowerCase","toUpperCase","headers","body","JSON","stringify","Error","clear","node","hasChildNodes","removeChild","lastChild","model","initModel","expiryBlinkingDelay","expiry_blinking_delay","joiningGroup","newStudent","new_student","student","username","email","memberSince","Date","member_since","tos","sharing","signedOn","signed_on","groups","map","group","name","title","notifications","memberOf","member_of","assignments","assignment","dueDate","due_date","link","results","grade","n","done","almostExpired","almost_expired","studentId","student_id","studentIdNeeded","student_id_needed","urls","tosModify","tos_modify","joinGroup","join_group","leaveGroup","leave_group","saveStudentId","save_student_id","studentToggleGroupnotifications","student_toggle_group_notifications","translations","assignmentAboutToExpire","assignment_about_to_expire","assignmentExpired","assignment_expired","cancel","completed","day","days","dueOn","due_on","editStudentId","edit_student_id","expired","goToAssignment","go_to_assignment","hour","hours","leave","leaveGroupQuestion","leave_group_question","leaveGroupText","leave_group_text","leaveGroupTitle","leave_group_title","minute","minutes","noAssignments","no_assignments","notificationsBell","notifications_bell","notSharing","not_sharing","handleStudentIdKeyDown","key","stopEditStudentId","url","input","querySelector","value","group_name","req","fetch","then","resp","json","catch","err","console","log","toggleGroupNotifications","bell","textContent","classList","remove","add","groupNode","ok","filter","g","groupsView","copyStudentIdToClipboard","navigator","clipboard","writeText","showCopyBubble","window","location","toggleStudentIdNeededView","modifyTos","href","toggleJoinGroup","joinGroupView","handleJoinGroupLinkInput","event","currentTarget","joinGroupErrorView","verifyJoinGroupDisabledStatus","select","group_link","some","push","view","groupStudentId","identityView","emailSpan","getElementById","memberSinceSpan","toLocaleString","month","year","tosSharingIcon","tosSharingSpan","tosSignedOnSpan","box","joinGroupsSelectView","style","display","msg","show","error","removeAttribute","setAttribute","groupsSelect","oldGroups","length","appendChild","joinGroupSelectView","option","createElement","disabled","groupView","i","div","groupTitleView","groupAssignmentsView","groupTitleIdView","icons","addEventListener","leaveGroupView","copyIcon","schoolId","editIcon","confirmIcon","cancelIcon","ul","groupAssignmentView","span","a","li","almostExpiredMin","setDate","getDate","iconSpan","icon","now","gradeSpan","slash","date","dateIcon","remainingTimeSpan","timeuntil","toggleLeaveGroup","stopPropagation","boxDiv","text","question","copyBtn","editBtn","confirmBtn","cancelBtn","focus","alert","scrollIntoView","parentNode","bubble","setTimeout","initListeners","addLinkListeners","addJoinGroupListeners","edit_user","date1","date2","diff","diffDays","Math","floor","diffHours","diffMinutes","diff_","parseInt","initStudentPage","notificationsOpen","studentPage","student_page","removeNotification","remove_notification","removeNotifications","remove_notifications","toggleNotifications","notificationsView","markNotificationRead","notification","notification_pk","pk","groupName","splice","indexOf","markAllNotificationsRead","badge","notificationsList","notificationView","noNotificationView","addNotificationsOpenListener","addAllNotificationsReadListener","init"],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}