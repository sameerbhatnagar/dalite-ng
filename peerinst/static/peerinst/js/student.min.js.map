{"version":3,"file":"student.min.js","sources":["peerinst/static/peerinst/js/ajax.js","peerinst/static/peerinst/js/utils.js","peerinst/static/peerinst/js/_student/index.js","peerinst/static/peerinst/js/_student/header/notifications.js"],"sourcesContent":["\"use strict\";\n\nexport function getCsrfToken() {\n  return document\n    .getElementsByName(\"csrfmiddlewaretoken\")[0]\n    .getAttribute(\"value\");\n}\n\nexport function buildReq(data, method) {\n  if (method.toLowerCase() === \"get\") {\n    return {\n      method: method.toUpperCase(),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else if (method.toLowerCase() === \"post\") {\n    const body = data ? JSON.stringify(data) : \"\";\n    return {\n      method: method.toUpperCase(),\n      body: body,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else {\n    throw Error(`Method ${method} not implemented yet.`);\n  }\n}\n\nexport function updateAssignmentQuestionList(\n  url,\n  questionId,\n  assignmentIdentifier,\n) {\n  const token = getCsrfToken();\n  const data = {\n    question_id: questionId,\n    assignment_identifier: assignmentIdentifier,\n  };\n  const req = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    credentials: \"include\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"X-CSRFToken\": token,\n    },\n  };\n  fetch(url, req)\n    .then(function(resp) {\n      if (!resp.ok) {\n        console.log(resp);\n      } else {\n        // Manipulate DOM\n        const list = document.getElementById(\"question-list\");\n        const card = document.getElementById(questionId);\n        if ($.contains(list, card)) {\n          $(\"#\" + questionId).remove();\n        } else {\n          $(\"#\" + questionId)\n            .find($(\".update-questions-btn\"))\n            .html(\"delete\");\n          const q = $(\"#\" + questionId).detach();\n          q.appendTo($(\"#question-list\"));\n          $(\"#empty-assignment-list\").remove();\n          $(\".search-set\").each(function() {\n            $(this) // eslint-disable-line no-invalid-this\n              .find(\".filter-count\")\n              .empty()\n              .append($(this).find(\".mdc-card:visible\").length); // eslint-disable-line no-invalid-this,max-len\n          });\n          $(\".search-set\").each(function() {\n            $(this) // eslint-disable-line no-invalid-this\n              .find(\".filter-count-total\")\n              .empty()\n              .append($(this).find(\".mdc-card\").length); // eslint-disable-line no-invalid-this,max-len\n          });\n        }\n      }\n    })\n    .catch(function(err) {\n      console.log(err);\n    });\n}\n","// @flow\n\"use strict\";\n\nexport function clear(node: HTMLElement): HTMLElement {\n  while (node.hasChildNodes()) {\n    // $FlowFixMe\n    node.removeChild(node.lastChild);\n  }\n  return node;\n}\n\nexport function formatDatetime(datetime: Date): string {\n  return (\n    datetime.toLocaleString(\"en-ca\", { year: \"numeric\" }) +\n    \"-\" +\n    datetime.toLocaleString(\"en-ca\", { month: \"2-digit\" }) +\n    \"-\" +\n    datetime.toLocaleString(\"en-ca\", { day: \"2-digit\" }) +\n    \" \" +\n    datetime.toLocaleString(\"en-ca\", { hour: \"2-digit\", hour12: false }) +\n    \":\" +\n    datetime.toLocaleString(\"en-ca\", { minute: \"2-digit\" })\n  );\n}\n\nexport function createSvg(name: string, useSprite: boolean = true): Element {\n  const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n  const use = document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\");\n  use.setAttributeNS(\n    \"http://www.w3.org/1999/xlink\",\n    \"href\",\n    svgLink(name, useSprite),\n  );\n  svg.append(use);\n  return svg;\n}\n\nexport function svgLink(name: string, useSprite: boolean = true): string {\n  if (useSprite) {\n    return `#${name}`;\n  } else {\n    return (\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      \"/static/peerinst/icons.svg#\" +\n      name\n    );\n  }\n}\n\nexport function showAlert(msg: string) {\n  const fullPageBox = document.createElement(\"div\");\n  fullPageBox.classList.add(\"alert-box__full-page\");\n  fullPageBox.addEventListener(\"click\", (event: MouseEvent) => {\n    event.stopPropagation();\n    fullPageBox.parentNode?.removeChild(fullPageBox);\n  });\n  document.body?.appendChild(fullPageBox);\n\n  const box = document.createElement(\"div\");\n  box.classList.add(\"alert-box__box\");\n  box.addEventListener(\"click\", (event: MouseEvent) =>\n    event.stopPropagation(),\n  );\n  fullPageBox.appendChild(box);\n\n  const span = document.createElement(\"span\");\n  span.classList.add(\"alert-box__msg\");\n  span.textContent = msg;\n  box.appendChild(span);\n\n  const ok = document.createElement(\"button\");\n  ok.classList.add(\"alert-box__btn\", \"mdc-button\", \"mdc-button--unelevated\");\n  ok.textContent = \"Ok\";\n  box.appendChild(ok);\n}\n\nexport function createElement(tag, text = \"\", attributes = {}) {\n  const elem = document.createElement(tag);\n  if (text) {\n    elem.textContent = text;\n  }\n  Object.entries(attributes).forEach(([key, val]) => {\n    elem.setAttribute(key, val);\n  });\n  return elem;\n}\n","import { buildReq } from \"../ajax.js\";\nimport { clear } from \"../utils.js\";\n\n/*********/\n/* model */\n/*********/\n\nlet model;\n\nfunction initModel(data) {\n  model = {\n    expiryBlinkingDelay: data.expiry_blinking_delay,\n    joiningGroup: false,\n    newStudent: data.new_student,\n    student: {\n      username: data.student.username,\n      email: data.student.email,\n      memberSince: new Date(data.student.member_since),\n      tos: {\n        sharing: data.student.tos.sharing,\n        signedOn: new Date(data.student.tos.signed_on),\n      },\n    },\n    groups: data.groups.map(group => ({\n      connectedCourseUrl: group.connected_course_url,\n      name: group.name,\n      title: group.title,\n      notifications: group.notifications,\n      memberOf: group.member_of,\n      assignments: group.assignments.map(assignment => ({\n        title: assignment.title,\n        dueDate: new Date(assignment.due_date),\n        link: assignment.link,\n        results: {\n          grade: assignment.results.grade,\n          n: assignment.results.n,\n        },\n        done: assignment.done,\n        almostExpired: assignment.almost_expired,\n      })),\n      studentId: group.student_id,\n      studentIdNeeded: group.student_id_needed,\n    })),\n    urls: {\n      tosModify: data.urls.tos_modify,\n      joinGroup: data.urls.join_group,\n      leaveGroup: data.urls.leave_group,\n      saveStudentId: data.urls.save_student_id,\n      studentToggleGroupnotifications:\n        data.urls.student_toggle_group_notifications,\n    },\n    translations: {\n      assignmentAboutToExpire: data.translations.assignment_about_to_expire,\n      assignmentExpired: data.translations.assignment_expired,\n      cancel: data.translations.cancel,\n      completed: data.translations.completed,\n      courseFlowButton: data.translations.course_flow_button,\n      day: data.translations.day,\n      days: data.translations.days,\n      dueOn: data.translations.due_on,\n      editStudentId: data.translations.edit_student_id,\n      expired: data.translations.expired,\n      goToAssignment: data.translations.go_to_assignment,\n      grade: data.translations.grade,\n      hour: data.translations.hour,\n      hours: data.translations.hours,\n      leave: data.translations.leave,\n      leaveGroupQuestion: data.translations.leave_group_question,\n      leaveGroupText: data.translations.leave_group_text,\n      leaveGroupTitle: data.translations.leave_group_title,\n      minute: data.translations.minute,\n      minutes: data.translations.minutes,\n      noAssignments: data.translations.no_assignments,\n      notificationsBell: data.translations.notifications_bell,\n      notSharing: data.translations.not_sharing,\n      sharing: data.translations.sharing,\n      studentId: data.translations.student_id,\n      studentIdNeeded: data.translations.student_id_needed,\n    },\n  };\n}\n\n/**********/\n/* update */\n/**********/\n\nfunction handleStudentIdKeyDown(key, group, node) {\n  if (key === \"Enter\") {\n    saveStudentId(group, node);\n  } else if (key === \"Escape\") {\n    stopEditStudentId(group, node);\n  }\n}\n\nfunction saveStudentId(group, node) {\n  const url = model.urls.saveStudentId;\n  const input = node.querySelector(\"input\");\n\n  const data = {\n    student_id: input.value,\n    group_name: group.name,\n  };\n\n  const req = buildReq(data, \"post\");\n  fetch(url, req)\n    .then(resp => resp.json())\n    .then(function(data) {\n      group.studentId = data.student_id;\n      stopEditStudentId(group, node);\n    })\n    .catch(function(err) {\n      stopEditStudentId(group, node);\n      console.log(err);\n    });\n}\n\nfunction toggleGroupNotifications(group, bell) {\n  const url = model.urls.studentToggleGroupnotifications;\n  const data = {\n    group_name: group.name,\n  };\n  const req = buildReq(data, \"post\");\n  fetch(url, req)\n    .then(resp => resp.json())\n    .then(function(data) {\n      group.notifications = data.notifications;\n      if (group.notifications) {\n        bell.textContent = \"notifications\";\n        bell.classList.remove(\"student-group--notifications__disabled\");\n      } else {\n        bell.textContent = \"notifications_off\";\n        bell.classList.add(\"student-group--notifications__disabled\");\n      }\n    })\n    .catch(function(err) {\n      console.log(err);\n    });\n}\n\nfunction leaveGroup(group, groupNode) {\n  const url = model.urls.leaveGroup;\n  const data = {\n    group_name: group.name,\n  };\n\n  const req = buildReq(data, \"post\");\n  fetch(url, req)\n    .then(function(resp) {\n      if (resp.ok) {\n        model.groups.filter(g => g.name === group.name)[0].memberOf = false;\n        groupsView();\n      } else {\n        console.log(resp);\n      }\n    })\n    .catch(err => console.log(err));\n}\n\nfunction copyStudentIdToClipboard(group, node) {\n  navigator.clipboard\n    .writeText(group.studentId)\n    .then(() => showCopyBubble(node));\n}\n\nexport function goToAssignment(\n  group: { studentId: string, studentIdNeeded: boolean, name: string },\n  assignment: { link: string },\n) {\n  if (!group.studentIdNeeded || group.studentId !== \"\") {\n    window.location = assignment.link;\n  } else {\n    toggleStudentIdNeededView(group);\n  }\n}\n\nexport function modifyTos() {\n  const url = model.urls.tosModify + \"?next=\" + window.location.href;\n  window.location.href = url;\n}\n\nexport function toggleJoinGroup() {\n  model.joiningGroup = !model.joiningGroup;\n  joinGroupView();\n}\n\nexport function handleJoinGroupLinkInput(event) {\n  if (event.key === \"Enter\") {\n    joinGroup();\n  } else {\n    if (event.currentTarget.value) {\n      joinGroupErrorView(\"\", false);\n    }\n    verifyJoinGroupDisabledStatus();\n  }\n}\n\nexport function joinGroup() {\n  const url = model.urls.joinGroup;\n  const input = document.querySelector(\"#student-add-group--box input\");\n  const select = document.querySelector(\"#student-add-group--box select\");\n\n  let data;\n  if (input.value) {\n    data = {\n      username: model.student.username,\n      group_link: input.value,\n    };\n  } else if (model.groups.some(group => !group.memberOf)) {\n    data = {\n      username: model.student.username,\n      group_name: select.value,\n    };\n  } else {\n    joinGroupErrorView(\"A URL is needed.\", true);\n    return;\n  }\n\n  const req = buildReq(data, \"post\");\n  fetch(url, req)\n    .then(resp => resp.json())\n    .then(function(group) {\n      input.value = \"\";\n      if (model.groups.some(g => g.name === group.name)) {\n        model.groups.filter(g => g.name === group.name)[0].memberOf =\n          group.member_of;\n      } else {\n        model.groups.push({\n          name: group.name,\n          title: group.title,\n          notifications: group.notifications,\n          memberOf: group.member_of,\n          assignments: group.assignments.map(assignment => ({\n            title: assignment.title,\n            dueDate: new Date(assignment.due_date),\n            link: assignment.link,\n            results: {\n              n: assignment.results.n,\n              grade: assignment.results.grade,\n            },\n            done: assignment.done,\n            almostExpired: assignment.almost_expired,\n          })),\n          studentId: group.student_id,\n          studentIdNeeded: group.student_id_needed,\n        });\n      }\n      toggleJoinGroup();\n      groupsView();\n    })\n    .catch(function(err) {\n      joinGroupErrorView(\"There is no group with that link.\", true);\n    });\n}\n\n/********/\n/* view */\n/********/\n\nfunction view(groupStudentId) {\n  identityView();\n  groupsView(groupStudentId);\n  joinGroupView();\n}\n\nfunction identityView() {\n  const emailSpan = document.getElementById(\"student-email\");\n  emailSpan.textContent = model.student.email;\n\n  const memberSinceSpan = document.getElementById(\"student-member-since\");\n  memberSinceSpan.textContent = model.student.memberSince.toLocaleString(\n    \"en-ca\",\n    {\n      month: \"short\",\n      day: \"numeric\",\n      year: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    },\n  );\n\n  const tosSharingIcon = document.getElementById(\"student-tos-sharing--icon\");\n  const tosSharingSpan = document.getElementById(\n    \"student-tos-sharing--sharing\",\n  );\n  if (model.student.tos.sharing) {\n    tosSharingIcon.textContent = \"check\";\n    tosSharingSpan.textContent = model.translations.sharing;\n  } else {\n    tosSharingIcon.textContent = \"clear\";\n    tosSharingSpan.textContent = model.translations.notSharing;\n  }\n\n  const tosSignedOnSpan = document.getElementById(\"student-tos-signed-on\");\n  tosSignedOnSpan.textContent = model.student.tos.signedOn.toLocaleString(\n    \"en-ca\",\n    {\n      month: \"short\",\n      day: \"numeric\",\n      year: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    },\n  );\n}\n\nfunction joinGroupView() {\n  const box = document.getElementById(\"student-add-group--box\");\n  const input = document.querySelector(\"#student-add-group--box input\");\n  if (model.joiningGroup) {\n    joinGroupsSelectView();\n    box.style.display = \"flex\";\n  } else {\n    box.style.display = \"none\";\n    input.value = \"\";\n  }\n  joinGroupErrorView(\"\", false);\n}\n\nfunction joinGroupErrorView(msg: string, show: boolean) {\n  const error = document.getElementById(\"student-add-group__error\");\n  const input = document.querySelector(\"#student-add-group--box input\");\n  error.textContent = msg;\n  if (show) {\n    error.removeAttribute(\"hidden\");\n    input.classList.add(\"input--error\");\n  } else {\n    error.setAttribute(\"hidden\", \"\");\n    input.classList.remove(\"input--error\");\n  }\n}\n\nfunction joinGroupsSelectView() {\n  const groupsSelect = document.getElementById(\"student-old-groups\");\n  clear(groupsSelect);\n  const oldGroups = model.groups.filter(group => !group.memberOf);\n  if (oldGroups.length) {\n    oldGroups.map(group =>\n      groupsSelect.appendChild(joinGroupSelectView(group)),\n    );\n    groupsSelect.style.display = \"inline-block\";\n    verifyJoinGroupDisabledStatus();\n  } else {\n    groupsSelect.style.display = \"none\";\n  }\n}\n\nfunction joinGroupSelectView(group) {\n  const option = document.createElement(\"option\");\n  option.value = group.name;\n  option.textContent = group.title;\n  return option;\n}\n\nfunction verifyJoinGroupDisabledStatus() {\n  const input = document.querySelector(\"#student-add-group--box input\");\n  const select = document.querySelector(\"#student-add-group--box select\");\n\n  if (input.value) {\n    select.disabled = true;\n  } else {\n    select.disabled = false;\n  }\n}\n\nfunction groupsView(groupStudentId: string = \"\") {\n  const groups = document.getElementById(\"student-groups\");\n  clear(groups);\n  model.groups\n    .filter(group => group.memberOf)\n    .map(group => groups.appendChild(groupView(group)));\n  if (groupStudentId) {\n    for (let i = 0; i < model.groups.length; i++) {\n      if (model.groups[i].name == groupStudentId) {\n        toggleStudentIdNeededView(model.groups[i]);\n        break;\n      }\n    }\n  }\n}\n\nfunction groupView(group) {\n  const div = document.createElement(\"div\");\n  div.classList.add(\"student-group\");\n  div.setAttribute(\"data-group\", group.name);\n\n  div.appendChild(groupTitleView(group));\n  div.appendChild(groupAssignmentsView(group));\n\n  return div;\n}\n\nfunction groupTitleView(group) {\n  const div = document.createElement(\"div\");\n  div.classList.add(\"student-group--title\");\n\n  if (group.studentIdNeeded) {\n    div.appendChild(groupTitleIdView(group));\n  }\n\n  const title = document.createElement(\"h3\");\n  title.textContent = group.title;\n  div.appendChild(title);\n\n  const icons = document.createElement(\"div\");\n  icons.classList.add(\"student-group--icons\");\n  div.appendChild(icons);\n\n  if (group.connectedCourseUrl) {\n    const courseButtonContainer = document.createElement(\"div\");\n    courseButtonContainer.classList.add(\"student-group--course\");\n    icons.appendChild(courseButtonContainer);\n\n    const courseButton = document.createElement(\"i\");\n    courseButton.classList.add(\"material-icons\", \"md-28\");\n    courseButton.title = model.translations.courseFlowButton;\n    courseButton.addEventListener(\n      \"click\",\n      () => (window.location.href = group.connectedCourseUrl),\n    );\n    courseButton.classList.add(\"course-flow-button\");\n    courseButton.textContent = \"calendar_today\";\n    courseButtonContainer.appendChild(courseButton);\n  }\n\n  const notifications = document.createElement(\"div\");\n  notifications.classList.add(\"student-group--notifications\");\n  icons.appendChild(notifications);\n\n  const bell = document.createElement(\"i\");\n  bell.classList.add(\"material-icons\", \"md-28\");\n  bell.title = model.translations.notificationsBell;\n  bell.addEventListener(\"click\", () => toggleGroupNotifications(group, bell));\n  if (group.notifications) {\n    bell.textContent = \"notifications\";\n  } else {\n    bell.textContent = \"notifications_off\";\n    bell.classList.add(\"student-group--notifications__disabled\");\n  }\n  notifications.appendChild(bell);\n\n  icons.appendChild(leaveGroupView(group, div));\n\n  return div;\n}\n\nfunction groupTitleIdView(group) {\n  const div = document.createElement(\"div\");\n  div.classList.add(\"student-group--id\");\n\n  const copyIcon = document.createElement(\"i\");\n  copyIcon.classList.add(\"material-icons\", \"md-28\", \"student-group--id__copy\");\n  copyIcon.style.display = \"flex\";\n  copyIcon.textContent = \"file_copy\";\n  copyIcon.addEventListener(\"click\", () =>\n    copyStudentIdToClipboard(group, div),\n  );\n  div.appendChild(copyIcon);\n\n  const studentId = document.createElement(\"span\");\n  studentId.classList.add(\"student-group--id__id\");\n  studentId.style.display = \"inline-block\";\n  studentId.textContent = group.studentId;\n  studentId.title = model.translations.studentId;\n  studentId.addEventListener(\"click\", () => editStudentId(group, div));\n  div.appendChild(studentId);\n\n  const input = document.createElement(\"input\");\n  input.classList.add(\"student-group--id__input\");\n  input.value = group.schoolId;\n  input.style.display = \"none\";\n  input.addEventListener(\"keydown\", event =>\n    handleStudentIdKeyDown(event.key, group, div),\n  );\n  div.appendChild(input);\n\n  const editIcon = document.createElement(\"i\");\n  editIcon.classList.add(\"material-icons\", \"md-28\", \"student-group--id__edit\");\n  editIcon.style.display = \"flex\";\n  editIcon.textContent = \"edit\";\n  editIcon.title = model.translations.editStudentId;\n  editIcon.addEventListener(\"click\", () => editStudentId(group, div));\n  div.appendChild(editIcon);\n\n  const confirmIcon = document.createElement(\"i\");\n  confirmIcon.classList.add(\n    \"material-icons\",\n    \"md-28\",\n    \"student-group--id__confirm\",\n  );\n  confirmIcon.style.display = \"none\";\n  confirmIcon.textContent = \"check\";\n  confirmIcon.addEventListener(\"click\", () => saveStudentId(group, div));\n  div.appendChild(confirmIcon);\n\n  const cancelIcon = document.createElement(\"i\");\n  cancelIcon.classList.add(\n    \"material-icons\",\n    \"md-28\",\n    \"student-group--id__cancel\",\n  );\n  cancelIcon.style.display = \"none\";\n  cancelIcon.textContent = \"close\";\n  cancelIcon.addEventListener(\"click\", () => stopEditStudentId(group, div));\n  div.appendChild(cancelIcon);\n\n  return div;\n}\n\nfunction groupAssignmentsView(group) {\n  const div = document.createElement(\"div\");\n  div.classList.add(\"student-group--assignments\");\n  if (group.assignments.length) {\n    const ul = document.createElement(\"ul\");\n    group.assignments.map(assignment =>\n      ul.appendChild(groupAssignmentView(assignment, group)),\n    );\n    div.appendChild(ul);\n  } else {\n    const span = document.createElement(\"span\");\n    span.classList.add(\"student-group--no-assignments\");\n    span.textContent = model.translations.noAssignments;\n    div.appendChild(span);\n  }\n  return div;\n}\n\nfunction groupAssignmentView(assignment, group) {\n  const a = document.createElement(\"a\");\n  a.href = assignment.link;\n\n  const li = document.createElement(\"li\");\n  li.classList.add(\"student-group--assignment\");\n  if (assignment.done) {\n    li.classList.add(\"student-group--assignment-complete\");\n  }\n  li.addEventListener(\"click\", (event: MouseEvent) =>\n    goToAssignment(group, assignment),\n  );\n\n  const almostExpiredMin = new Date(assignment.dueDate);\n  almostExpiredMin.setDate(\n    almostExpiredMin.getDate() - model.expiryBlinkingDelay,\n  );\n\n  const iconSpan = document.createElement(\"span\");\n  iconSpan.classList.add(\"student-group--assignment-icon\");\n  li.appendChild(iconSpan);\n  const icon = document.createElement(\"i\");\n  icon.classList.add(\"material-icons\", \"md-28\");\n  if (assignment.done) {\n    iconSpan.title = model.translations.goToAssignment;\n    icon.textContent = \"assignment_turned_in\";\n  } else if (assignment.dueDate <= new Date(Date.now())) {\n    iconSpan.title = model.translations.assignmentExpired;\n    icon.textContent = \"assignment_late\";\n  } else if (almostExpiredMin <= new Date(Date.now())) {\n    iconSpan.title = model.translations.assignmentAboutToExpire;\n    icon.textContent = \"assignment_late\";\n  } else {\n    iconSpan.title = model.translations.goToAssignment;\n    icon.textContent = \"assignment\";\n  }\n  iconSpan.appendChild(icon);\n\n  const gradeSpan = document.createElement(\"span\");\n  gradeSpan.classList.add(\"student-group--assignment-questions\");\n  gradeSpan.title = model.translations.grade;\n  li.appendChild(gradeSpan);\n  const grade = document.createElement(\"span\");\n  grade.textContent = assignment.results.grade;\n  gradeSpan.appendChild(grade);\n  const slash = document.createElement(\"span\");\n  slash.textContent = \"/\";\n  gradeSpan.appendChild(slash);\n  const n = document.createElement(\"span\");\n  n.textContent = assignment.results.n;\n  gradeSpan.appendChild(n);\n\n  const title = document.createElement(\"span\");\n  title.classList.add(\"student-group--assignment-title\");\n  title.title = model.translations.goToAssignment;\n  title.textContent = assignment.title;\n  li.appendChild(title);\n\n  const date = document.createElement(\"span\");\n  date.classList.add(\"student-group--assignment-date\");\n  if (assignment.done) {\n    date.removeAttribute(\"title\");\n    date.textContent = model.translations.completed;\n  } else if (assignment.dueDate <= new Date(Date.now())) {\n    date.title = model.translations.assignmentExpired;\n    date.textContent = model.translations.expired;\n  } else {\n    date.title =\n      model.translations.dueOn +\n      \" \" +\n      assignment.dueDate.toLocaleString(\"en-ca\", {\n        month: \"short\",\n        day: \"numeric\",\n        year: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      });\n    const dateIcon = document.createElement(\"i\");\n    dateIcon.classList.add(\"material-icons\", \"md-18\");\n    dateIcon.textContent = \"access_time\";\n    date.appendChild(dateIcon);\n    const remainingTimeSpan = document.createElement(\"span\");\n    remainingTimeSpan.textContent = timeuntil(\n      assignment.dueDate,\n      new Date(Date.now()),\n    );\n    date.appendChild(remainingTimeSpan);\n    if (almostExpiredMin <= new Date(Date.now())) {\n      dateIcon.classList.add(\"blinking\");\n    }\n  }\n  li.appendChild(date);\n  return li;\n}\n\nfunction leaveGroupView(group, groupNode) {\n  const div = document.createElement(\"div\");\n  div.classList.add(\"student-group--remove\");\n  div.title = model.translations.leaveGroupTitle;\n\n  const icon = document.createElement(\"i\");\n  icon.classList.add(\"material-icons\", \"md-28\");\n  icon.addEventListener(\"click\", () => toggleLeaveGroup(groupNode));\n  icon.textContent = \"remove_circle_outline\";\n  div.appendChild(icon);\n\n  const box = document.createElement(\"div\");\n  box.classList.add(\"student-group--remove-confirmation-box\");\n  box.style.display = \"none\";\n  box.addEventListener(\"click\", function(event: MouseEvent) {\n    event.stopPropagation;\n    toggleLeaveGroup(groupNode);\n  });\n  div.appendChild(box);\n\n  const boxDiv = document.createElement(\"div\");\n  boxDiv.addEventListener(\"click\", (event: MouseEvent) =>\n    event.stopPropagation(),\n  );\n  box.appendChild(boxDiv);\n\n  const title = document.createElement(\"h3\");\n  title.textContent = model.translations.leaveGroupTitle + \" \" + group.title;\n  boxDiv.appendChild(title);\n\n  const text = document.createElement(\"p\");\n  text.textContent = model.translations.leaveGroupText;\n  boxDiv.appendChild(text);\n\n  const question = document.createElement(\"p\");\n  question.textContent = model.translations.leaveGroupQuestion;\n  boxDiv.appendChild(question);\n\n  const leave = document.createElement(\"button\");\n  leave.classList.add(\"mdc-button\", \"mdc-button--unelevated\");\n  leave.addEventListener(\"click\", () => leaveGroup(group, groupNode));\n  leave.textContent = model.translations.leave;\n  boxDiv.appendChild(leave);\n\n  const cancel = document.createElement(\"button\");\n  cancel.classList.add(\"mdc-button\");\n  cancel.addEventListener(\"click\", () => toggleLeaveGroup(groupNode));\n  cancel.textContent = model.translations.cancel;\n  boxDiv.appendChild(cancel);\n\n  return div;\n}\n\nfunction editStudentId(group, node) {\n  const span = node.querySelector(\".student-group--id__id\");\n  const input = node.querySelector(\".student-group--id__input\");\n  const copyBtn = node.querySelector(\".student-group--id__copy\");\n  const editBtn = node.querySelector(\".student-group--id__edit\");\n  const confirmBtn = node.querySelector(\".student-group--id__confirm\");\n  const cancelBtn = node.querySelector(\".student-group--id__cancel\");\n\n  input.value = group.studentId;\n\n  span.style.display = \"none\";\n  copyBtn.style.display = \"none\";\n  editBtn.style.display = \"none\";\n  input.style.display = \"inline-block\";\n  confirmBtn.style.display = \"flex\";\n  cancelBtn.style.display = \"flex\";\n\n  input.focus();\n  toggleStudentIdNeededView(group);\n}\n\nfunction stopEditStudentId(group, node) {\n  const span = node.querySelector(\"span\");\n  const input = node.querySelector(\"input\");\n  const copyBtn = node.querySelector(\".student-group--id__copy\");\n  const editBtn = node.querySelector(\".student-group--id__edit\");\n  const confirmBtn = node.querySelector(\".student-group--id__confirm\");\n  const cancelBtn = node.querySelector(\".student-group--id__cancel\");\n\n  span.textContent = group.studentId;\n\n  span.style.display = \"inline-block\";\n  copyBtn.style.display = \"flex\";\n  editBtn.style.display = \"flex\";\n  input.style.display = \"none\";\n  confirmBtn.style.display = \"none\";\n  cancelBtn.style.display = \"none\";\n}\n\nfunction toggleStudentIdNeededView(group) {\n  const node = document.querySelector(\n    `.student-group[data-group='${group.name}'] .student-group--id`,\n  );\n  if (\n    node.querySelector(\".student-group--id__input\")?.style.display === \"none\"\n  ) {\n    const alert = document.createElement(\"div\");\n    alert.classList.add(\"student-group--id__alert\");\n    alert.textContent = model.translations.studentIdNeeded;\n    node.appendChild(alert);\n    alert.scrollIntoView(true);\n  } else {\n    const alert = node.querySelector(\".student-group--id__alert\");\n    alert?.parentNode.removeChild(alert);\n  }\n}\n\nfunction toggleLeaveGroup(node) {\n  const box = node.querySelector(\".student-group--remove-confirmation-box\");\n  if (box.style.display == \"none\") {\n    box.style.display = \"flex\";\n  } else {\n    box.style.display = \"none\";\n  }\n}\n\nfunction showCopyBubble(node) {\n  const bubble = document.createElement(\"div\");\n  bubble.classList.add(\"bubble\");\n  bubble.textContent = \"Copied to clipboard!\";\n  node.appendChild(bubble);\n\n  setTimeout(() => node.removeChild(bubble), 600);\n}\n\n/*************/\n/* listeners */\n/*************/\n\nfunction initListeners() {\n  addLinkListeners();\n  addJoinGroupListeners();\n}\n\nfunction addLinkListeners() {\n  document\n    .getElementById(\"edit-user-btn\")\n    .addEventListener(\"click\", function() {\n      edit_user();\n    });\n  document\n    .getElementById(\"modify-tos-btn\")\n    .addEventListener(\"click\", function() {\n      modifyTos();\n    });\n}\n\nfunction addJoinGroupListeners() {\n  document\n    .querySelector(\"#student-add-group .admin-link\")\n    .addEventListener(\"click\", function() {\n      toggleJoinGroup();\n    });\n  document\n    .getElementById(\"student-add-group--box\")\n    .addEventListener(\"click\", function() {\n      event.stopPropagation;\n    });\n  document\n    .querySelector(\"#student-add-group--box > div\")\n    .addEventListener(\"click\", function() {\n      event.stopPropagation;\n    });\n  document\n    .querySelector(\"#student-add-group--box input[name='new-group']\")\n    .addEventListener(\"keyup\", function(event) {\n      handleJoinGroupLinkInput(event);\n    });\n  document\n    .getElementById(\"join-group-btn\")\n    .addEventListener(\"click\", function() {\n      joinGroup();\n    });\n  document\n    .getElementById(\"cancel-join-group-btn\")\n    .addEventListener(\"click\", function() {\n      toggleJoinGroup();\n    });\n}\n\n/*********/\n/* utils */\n/*********/\n\nfunction timeuntil(date1, date2) {\n  let diff = date1 - date2;\n  const diffDays = Math.floor(diff / 1000 / 60 / 60 / 24);\n  diff = diff - diffDays * 24 * 60 * 60 * 1000;\n  const diffHours = Math.floor(diff / 1000 / 60 / 60);\n  diff = diff - diffHours * 60 * 60 * 1000;\n  const diffMinutes = Math.floor(diff / 1000 / 60);\n  let diff_ = \"\";\n  if (diffDays > 1) {\n    diff_ = diff_ + parseInt(diffDays) + \" \" + model.translations.days + \", \";\n  } else if (diffDays === 1) {\n    diff_ = diff_ + parseInt(diffDays) + \" \" + model.translations.day + \", \";\n  }\n  if (diffHours === 1) {\n    diff_ = diff_ + parseInt(diffHours) + \" \" + model.translations.hour + \", \";\n  } else if (diffHours > 1 || diffDays) {\n    diff_ =\n      diff_ + parseInt(diffHours) + \" \" + model.translations.hours + \", \";\n  }\n  if (diffMinutes === 1) {\n    diff_ = diff_ + parseInt(diffMinutes) + \" \" + model.translations.minute;\n  } else {\n    diff_ = diff_ + parseInt(diffMinutes) + \" \" + model.translations.minutes;\n  }\n  return diff_;\n}\n\n/********/\n/* init */\n/********/\n\nexport function initStudentPage(data, groupStudentId = \"\") {\n  initModel(data);\n  view(groupStudentId);\n  initListeners();\n}\n","import { buildReq } from \"../../ajax.js\";\nimport { clear } from \"../../utils.js\";\n\n/*********/\n/* model */\n/*********/\n\nlet model;\n\nfunction initModel(data) {\n  model = {\n    notificationsOpen: false,\n    notifications: data.notifications,\n    urls: {\n      studentPage: data.urls.student_page,\n      removeNotification: data.urls.remove_notification,\n      removeNotifications: data.urls.remove_notifications,\n    },\n  };\n}\n\n/**********/\n/* update */\n/**********/\n\nfunction toggleNotifications() {\n  const header = document.querySelector(\".notifications\");\n  document.querySelectorAll(\".header--togglable > *\").forEach(header_ => {\n    if (header_ != header && header_.hasAttribute(\"open\")) {\n      if (header_.shadowRoot) {\n        header_.shadowRoot\n          .querySelector(\".header__icon\")\n          .dispatchEvent(new Event(\"click\"));\n      } else {\n        header_\n          .querySelector(\".header__icon\")\n          .dispatchEvent(new Event(\"click\"));\n      }\n    }\n  });\n  model.notificationsOpen = !model.notificationsOpen;\n  notificationsView();\n}\n\nfunction markNotificationRead(notification) {\n  const url = model.urls.removeNotification;\n  const data = {\n    notification_pk: notification.pk,\n  };\n  const req = buildReq(data, \"post\");\n  fetch(url, req)\n    .then(resp => resp.text())\n    .then(groupName => {\n      if (groupName) {\n        window.location =\n          model.urls.studentPage + \"?group-student-id-needed=\" + groupName;\n      } else if (notification.link) {\n        window.location = notification.link;\n      } else {\n        model.notifications.splice(\n          model.notifications.indexOf(notification),\n          1,\n        );\n        notificationsView();\n      }\n    })\n    .catch(function(err) {\n      console.log(err);\n    });\n}\n\nfunction markAllNotificationsRead() {\n  const url = model.urls.removeNotifications;\n  const req = buildReq({}, \"post\");\n  fetch(url, req)\n    .then(function(resp) {\n      if (resp.ok) {\n        model.notifications = [];\n        notificationsView();\n      }\n    })\n    .catch(function(err) {\n      console.log(err);\n    });\n}\n\n/********/\n/* view */\n/********/\n\nfunction view() {\n  notificationsView();\n}\n\nfunction notificationsView() {\n  const notifications = document.querySelector(\".notifications\");\n  const badge = notifications.querySelector(\".notifications__icon__badge\");\n  const notificationsList = notifications.querySelector(\n    \".notifications__notifications\",\n  );\n\n  if (model.notifications.length) {\n    badge.textContent = model.notifications.length;\n    badge.style.display = \"flex\";\n  } else {\n    badge.textContent = \"\";\n    badge.style.display = \"none\";\n  }\n\n  clear(notificationsList);\n  if (model.notifications.length) {\n    model.notifications.map(function(notification) {\n      notificationsList.appendChild(notificationView(notification));\n    });\n  } else {\n    notificationsList.appendChild(noNotificationView());\n  }\n\n  if (model.notificationsOpen) {\n    notifications.setAttribute(\"open\", \"\");\n    notifications.classList.add(\"notifications--open\");\n  } else {\n    notifications.removeAttribute(\"open\");\n    notifications.classList.remove(\"notifications--open\");\n  }\n}\n\nfunction notificationView(notification) {\n  const div = document.createElement(\"div\");\n  div.classList.add(\"notification\");\n  div.textContent = notification.text;\n  div.addEventListener(\"click\", () => markNotificationRead(notification));\n  return div;\n}\n\nfunction noNotificationView() {\n  const div = document.createElement(\"div\");\n  div.classList.add(\"notifications__no-new\");\n  div.textContent = \"No new notifications\";\n  return div;\n}\n\n/*************/\n/* listeners */\n/*************/\n\nfunction initListeners() {\n  addNotificationsOpenListener();\n  addAllNotificationsReadListener();\n}\n\nfunction addNotificationsOpenListener() {\n  document\n    .querySelector(\".notifications\")\n    ?.addEventListener(\"click\", function(event) {\n      event.stopPropagation();\n    });\n  document\n    .querySelector(\".notifications__icon\")\n    ?.addEventListener(\"click\", function(event) {\n      toggleNotifications();\n    });\n  document.body.addEventListener(\"click\", function(event) {\n    if (model.notificationsOpen) {\n      toggleNotifications();\n    }\n  });\n}\n\nfunction addAllNotificationsReadListener() {\n  document\n    .querySelector(\".notifications__read-all-btn\")\n    ?.addEventListener(\"click\", markAllNotificationsRead);\n}\n\n/********/\n/* init */\n/********/\n\nexport function init(url) {\n  if (document.querySelector(\".notifications\")) {\n    const req = buildReq(null, \"get\");\n    fetch(url, req)\n      .then(resp => resp.json())\n      .then(function(data) {\n        initModel(data);\n        initListeners();\n        view();\n      })\n      .catch(err => console.log(err));\n  }\n}\n"],"names":["getCsrfToken","document","getElementsByName","getAttribute","buildReq","data","method","toLowerCase","toUpperCase","headers","body","JSON","stringify","Error","clear","node","hasChildNodes","removeChild","lastChild","model","initModel","expiryBlinkingDelay","expiry_blinking_delay","joiningGroup","newStudent","new_student","student","username","email","memberSince","Date","member_since","tos","sharing","signedOn","signed_on","groups","map","group","connectedCourseUrl","connected_course_url","name","title","notifications","memberOf","member_of","assignments","assignment","dueDate","due_date","link","results","grade","n","done","almostExpired","almost_expired","studentId","student_id","studentIdNeeded","student_id_needed","urls","tosModify","tos_modify","joinGroup","join_group","leaveGroup","leave_group","saveStudentId","save_student_id","studentToggleGroupnotifications","student_toggle_group_notifications","translations","assignmentAboutToExpire","assignment_about_to_expire","assignmentExpired","assignment_expired","cancel","completed","courseFlowButton","course_flow_button","day","days","dueOn","due_on","editStudentId","edit_student_id","expired","goToAssignment","go_to_assignment","hour","hours","leave","leaveGroupQuestion","leave_group_question","leaveGroupText","leave_group_text","leaveGroupTitle","leave_group_title","minute","minutes","noAssignments","no_assignments","notificationsBell","notifications_bell","notSharing","not_sharing","handleStudentIdKeyDown","key","stopEditStudentId","url","input","querySelector","value","group_name","req","fetch","then","resp","json","catch","err","console","log","toggleGroupNotifications","bell","textContent","classList","remove","add","groupNode","ok","filter","g","groupsView","copyStudentIdToClipboard","navigator","clipboard","writeText","showCopyBubble","window","location","toggleStudentIdNeededView","modifyTos","href","toggleJoinGroup","joinGroupView","handleJoinGroupLinkInput","event","currentTarget","joinGroupErrorView","verifyJoinGroupDisabledStatus","select","group_link","some","push","view","groupStudentId","identityView","emailSpan","getElementById","memberSinceSpan","toLocaleString","month","year","tosSharingIcon","tosSharingSpan","tosSignedOnSpan","box","joinGroupsSelectView","style","display","msg","show","error","removeAttribute","setAttribute","groupsSelect","oldGroups","length","appendChild","joinGroupSelectView","option","createElement","disabled","groupView","i","div","groupTitleView","groupAssignmentsView","groupTitleIdView","icons","courseButtonContainer","courseButton","addEventListener","leaveGroupView","copyIcon","schoolId","editIcon","confirmIcon","cancelIcon","ul","groupAssignmentView","span","a","li","almostExpiredMin","setDate","getDate","iconSpan","icon","now","gradeSpan","slash","date","dateIcon","remainingTimeSpan","timeuntil","toggleLeaveGroup","stopPropagation","boxDiv","text","question","copyBtn","editBtn","confirmBtn","cancelBtn","focus","alert","scrollIntoView","parentNode","bubble","setTimeout","initListeners","addLinkListeners","addJoinGroupListeners","edit_user","date1","date2","diff","diffDays","Math","floor","diffHours","diffMinutes","diff_","parseInt","initStudentPage","notificationsOpen","studentPage","student_page","removeNotification","remove_notification","removeNotifications","remove_notifications","toggleNotifications","header","querySelectorAll","forEach","header_","hasAttribute","shadowRoot","dispatchEvent","Event","notificationsView","markNotificationRead","notification","notification_pk","pk","groupName","splice","indexOf","markAllNotificationsRead","badge","notificationsList","notificationView","noNotificationView","addNotificationsOpenListener","addAllNotificationsReadListener","init"],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}