{"version":3,"file":"collection.min.js","sources":["node_modules/@material/base/foundation.js","node_modules/@material/base/component.js","node_modules/@material/base/index.js","node_modules/@material/snackbar/constants.js","node_modules/@material/snackbar/foundation.js","node_modules/@material/animation/index.js","node_modules/@material/snackbar/index.js","peerinst/static/peerinst/js/_collection/collection_distribute.js","peerinst/static/peerinst/js/ajax.js","peerinst/static/peerinst/js/_collection/collection_list.js","peerinst/static/peerinst/js/_collection/collection_functions.js","peerinst/static/peerinst/js/_collection/collection_update.js","peerinst/static/peerinst/js/collection.js"],"sourcesContent":["/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from './foundation';\nimport MDCComponent from './component';\n\nexport {MDCFoundation, MDCComponent};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const cssClasses = {\n  ROOT: 'mdc-snackbar',\n  TEXT: 'mdc-snackbar__text',\n  ACTION_WRAPPER: 'mdc-snackbar__action-wrapper',\n  ACTION_BUTTON: 'mdc-snackbar__action-button',\n  ACTIVE: 'mdc-snackbar--active',\n  MULTILINE: 'mdc-snackbar--multiline',\n  ACTION_ON_BOTTOM: 'mdc-snackbar--action-on-bottom',\n};\n\nexport const strings = {\n  TEXT_SELECTOR: '.mdc-snackbar__text',\n  ACTION_WRAPPER_SELECTOR: '.mdc-snackbar__action-wrapper',\n  ACTION_BUTTON_SELECTOR: '.mdc-snackbar__action-button',\n  SHOW_EVENT: 'MDCSnackbar:show',\n  HIDE_EVENT: 'MDCSnackbar:hide',\n};\n\nexport const numbers = {\n  MESSAGE_TIMEOUT: 2750,\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\nimport {cssClasses, strings, numbers} from './constants';\n\nexport default class MDCSnackbarFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      setAriaHidden: () => {},\n      unsetAriaHidden: () => {},\n      setActionAriaHidden: () => {},\n      unsetActionAriaHidden: () => {},\n      setActionText: (/* actionText: string */) => {},\n      setMessageText: (/* message: string */) => {},\n      setFocus: () => {},\n      visibilityIsHidden: () => /* boolean */ false,\n      registerCapturedBlurHandler: (/* handler: EventListener */) => {},\n      deregisterCapturedBlurHandler: (/* handler: EventListener */) => {},\n      registerVisibilityChangeHandler: (/* handler: EventListener */) => {},\n      deregisterVisibilityChangeHandler: (/* handler: EventListener */) => {},\n      registerCapturedInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterCapturedInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerActionClickHandler: (/* handler: EventListener */) => {},\n      deregisterActionClickHandler: (/* handler: EventListener */) => {},\n      registerTransitionEndHandler: (/* handler: EventListener */) => {},\n      deregisterTransitionEndHandler: (/* handler: EventListener */) => {},\n      notifyShow: () => {},\n      notifyHide: () => {},\n    };\n  }\n\n  get active() {\n    return this.active_;\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCSnackbarFoundation.defaultAdapter, adapter));\n\n    this.active_ = false;\n    this.actionWasClicked_ = false;\n    this.dismissOnAction_ = true;\n    this.firstFocus_ = true;\n    this.pointerDownRecognized_ = false;\n    this.snackbarHasFocus_ = false;\n    this.snackbarData_ = null;\n    this.queue_ = [];\n    this.actionClickHandler_ = () => {\n      this.actionWasClicked_ = true;\n      this.invokeAction_();\n    };\n    this.visibilitychangeHandler_ = () => {\n      clearTimeout(this.timeoutId_);\n      this.snackbarHasFocus_ = true;\n\n      if (!this.adapter_.visibilityIsHidden()) {\n        setTimeout(this.cleanup_.bind(this), this.snackbarData_.timeout || numbers.MESSAGE_TIMEOUT);\n      }\n    };\n    this.interactionHandler_ = (evt) => {\n      if (evt.type == 'touchstart' || evt.type == 'mousedown') {\n        this.pointerDownRecognized_ = true;\n      }\n      this.handlePossibleTabKeyboardFocus_(evt);\n\n      if (evt.type == 'focus') {\n        this.pointerDownRecognized_ = false;\n      }\n    };\n    this.blurHandler_ = () => {\n      clearTimeout(this.timeoutId_);\n      this.snackbarHasFocus_ = false;\n      this.timeoutId_ = setTimeout(this.cleanup_.bind(this), this.snackbarData_.timeout || numbers.MESSAGE_TIMEOUT);\n    };\n  }\n\n  init() {\n    this.adapter_.registerActionClickHandler(this.actionClickHandler_);\n    this.adapter_.setAriaHidden();\n    this.adapter_.setActionAriaHidden();\n  }\n\n  destroy() {\n    this.adapter_.deregisterActionClickHandler(this.actionClickHandler_);\n    this.adapter_.deregisterCapturedBlurHandler(this.blurHandler_);\n    this.adapter_.deregisterVisibilityChangeHandler(this.visibilitychangeHandler_);\n    ['touchstart', 'mousedown', 'focus'].forEach((evtType) => {\n      this.adapter_.deregisterCapturedInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  dismissesOnAction() {\n    return this.dismissOnAction_;\n  }\n\n  setDismissOnAction(dismissOnAction) {\n    this.dismissOnAction_ = !!dismissOnAction;\n  }\n\n  show(data) {\n    if (!data) {\n      throw new Error(\n        'Please provide a data object with at least a message to display.');\n    }\n    if (!data.message) {\n      throw new Error('Please provide a message to be displayed.');\n    }\n    if (data.actionHandler && !data.actionText) {\n      throw new Error('Please provide action text with the handler.');\n    }\n    if (this.active) {\n      this.queue_.push(data);\n      return;\n    }\n    clearTimeout(this.timeoutId_);\n    this.snackbarData_ = data;\n    this.firstFocus_ = true;\n    this.adapter_.registerVisibilityChangeHandler(this.visibilitychangeHandler_);\n    this.adapter_.registerCapturedBlurHandler(this.blurHandler_);\n    ['touchstart', 'mousedown', 'focus'].forEach((evtType) => {\n      this.adapter_.registerCapturedInteractionHandler(evtType, this.interactionHandler_);\n    });\n\n    const {ACTIVE, MULTILINE, ACTION_ON_BOTTOM} = cssClasses;\n\n    this.adapter_.setMessageText(this.snackbarData_.message);\n\n    if (this.snackbarData_.multiline) {\n      this.adapter_.addClass(MULTILINE);\n      if (this.snackbarData_.actionOnBottom) {\n        this.adapter_.addClass(ACTION_ON_BOTTOM);\n      }\n    }\n\n    if (this.snackbarData_.actionHandler) {\n      this.adapter_.setActionText(this.snackbarData_.actionText);\n      this.actionHandler_ = this.snackbarData_.actionHandler;\n      this.setActionHidden_(false);\n    } else {\n      this.setActionHidden_(true);\n      this.actionHandler_ = null;\n      this.adapter_.setActionText(null);\n    }\n\n    this.active_ = true;\n    this.adapter_.addClass(ACTIVE);\n    this.adapter_.unsetAriaHidden();\n    this.adapter_.notifyShow();\n\n    this.timeoutId_ = setTimeout(this.cleanup_.bind(this), this.snackbarData_.timeout || numbers.MESSAGE_TIMEOUT);\n  }\n\n  handlePossibleTabKeyboardFocus_() {\n    const hijackFocus =\n      this.firstFocus_ && !this.pointerDownRecognized_;\n\n    if (hijackFocus) {\n      this.setFocusOnAction_();\n    }\n\n    this.firstFocus_ = false;\n  }\n\n  setFocusOnAction_() {\n    this.adapter_.setFocus();\n    this.snackbarHasFocus_ = true;\n    this.firstFocus_ = false;\n  }\n\n  invokeAction_() {\n    try {\n      if (!this.actionHandler_) {\n        return;\n      }\n\n      this.actionHandler_();\n    } finally {\n      if (this.dismissOnAction_) {\n        this.cleanup_();\n      }\n    }\n  }\n\n  cleanup_() {\n    const allowDismissal = !this.snackbarHasFocus_ || this.actionWasClicked_;\n\n    if (allowDismissal) {\n      const {ACTIVE, MULTILINE, ACTION_ON_BOTTOM} = cssClasses;\n\n      this.adapter_.removeClass(ACTIVE);\n\n      const handler = () => {\n        clearTimeout(this.timeoutId_);\n        this.adapter_.deregisterTransitionEndHandler(handler);\n        this.adapter_.removeClass(MULTILINE);\n        this.adapter_.removeClass(ACTION_ON_BOTTOM);\n        this.setActionHidden_(true);\n        this.adapter_.setAriaHidden();\n        this.active_ = false;\n        this.snackbarHasFocus_ = false;\n        this.adapter_.notifyHide();\n        this.showNext_();\n      };\n\n      this.adapter_.registerTransitionEndHandler(handler);\n    }\n  }\n\n  showNext_() {\n    if (!this.queue_.length) {\n      return;\n    }\n    this.show(this.queue_.shift());\n  }\n\n  setActionHidden_(isHidden) {\n    if (isHidden) {\n      this.adapter_.setActionAriaHidden();\n    } else {\n      this.adapter_.unsetActionAriaHidden();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   noPrefix: string,\n *   webkitPrefix: string,\n *   styleProperty: string\n * }}\n */\nlet VendorPropertyMapType;\n\n/** @const {Object<string, !VendorPropertyMapType>} */\nconst eventTypeMap = {\n  'animationstart': {\n    noPrefix: 'animationstart',\n    webkitPrefix: 'webkitAnimationStart',\n    styleProperty: 'animation',\n  },\n  'animationend': {\n    noPrefix: 'animationend',\n    webkitPrefix: 'webkitAnimationEnd',\n    styleProperty: 'animation',\n  },\n  'animationiteration': {\n    noPrefix: 'animationiteration',\n    webkitPrefix: 'webkitAnimationIteration',\n    styleProperty: 'animation',\n  },\n  'transitionend': {\n    noPrefix: 'transitionend',\n    webkitPrefix: 'webkitTransitionEnd',\n    styleProperty: 'transition',\n  },\n};\n\n/** @const {Object<string, !VendorPropertyMapType>} */\nconst cssPropertyMap = {\n  'animation': {\n    noPrefix: 'animation',\n    webkitPrefix: '-webkit-animation',\n  },\n  'transform': {\n    noPrefix: 'transform',\n    webkitPrefix: '-webkit-transform',\n  },\n  'transition': {\n    noPrefix: 'transition',\n    webkitPrefix: '-webkit-transition',\n  },\n};\n\n/**\n * @param {!Object} windowObj\n * @return {boolean}\n */\nfunction hasProperShape(windowObj) {\n  return (windowObj['document'] !== undefined && typeof windowObj['document']['createElement'] === 'function');\n}\n\n/**\n * @param {string} eventType\n * @return {boolean}\n */\nfunction eventFoundInMaps(eventType) {\n  return (eventType in eventTypeMap || eventType in cssPropertyMap);\n}\n\n/**\n * @param {string} eventType\n * @param {!Object<string, !VendorPropertyMapType>} map\n * @param {!Element} el\n * @return {string}\n */\nfunction getJavaScriptEventName(eventType, map, el) {\n  return map[eventType].styleProperty in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;\n}\n\n/**\n * Helper function to determine browser prefix for CSS3 animation events\n * and property names.\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getAnimationName(windowObj, eventType) {\n  if (!hasProperShape(windowObj) || !eventFoundInMaps(eventType)) {\n    return eventType;\n  }\n\n  const map = /** @type {!Object<string, !VendorPropertyMapType>} */ (\n    eventType in eventTypeMap ? eventTypeMap : cssPropertyMap\n  );\n  const el = windowObj['document']['createElement']('div');\n  let eventName = '';\n\n  if (map === eventTypeMap) {\n    eventName = getJavaScriptEventName(eventType, map, el);\n  } else {\n    eventName = map[eventType].noPrefix in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;\n  }\n\n  return eventName;\n}\n\n// Public functions to access getAnimationName() for JavaScript events or CSS\n// property names.\n\nconst transformStyleProperties = ['transform', 'WebkitTransform', 'MozTransform', 'OTransform', 'MSTransform'];\n\n/**\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getCorrectEventName(windowObj, eventType) {\n  return getAnimationName(windowObj, eventType);\n}\n\n/**\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getCorrectPropertyName(windowObj, eventType) {\n  return getAnimationName(windowObj, eventType);\n}\n\nexport {transformStyleProperties, getCorrectEventName, getCorrectPropertyName};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCComponent} from '@material/base/index';\nimport MDCSnackbarFoundation from './foundation';\nimport {getCorrectEventName} from '@material/animation/index';\n\nexport {MDCSnackbarFoundation};\n\nexport class MDCSnackbar extends MDCComponent {\n  static attachTo(root) {\n    return new MDCSnackbar(root);\n  }\n\n  show(data) {\n    this.foundation_.show(data);\n  }\n\n  getDefaultFoundation() {\n    const {\n      TEXT_SELECTOR,\n      ACTION_BUTTON_SELECTOR,\n    } = MDCSnackbarFoundation.strings;\n    const getText = () => this.root_.querySelector(TEXT_SELECTOR);\n    const getActionButton = () => this.root_.querySelector(ACTION_BUTTON_SELECTOR);\n\n    /* eslint brace-style: \"off\" */\n    return new MDCSnackbarFoundation({\n      addClass: (className) => this.root_.classList.add(className),\n      removeClass: (className) => this.root_.classList.remove(className),\n      setAriaHidden: () => this.root_.setAttribute('aria-hidden', 'true'),\n      unsetAriaHidden: () => this.root_.removeAttribute('aria-hidden'),\n      setActionAriaHidden: () => getActionButton().setAttribute('aria-hidden', 'true'),\n      unsetActionAriaHidden: () => getActionButton().removeAttribute('aria-hidden'),\n      setActionText: (text) => {getActionButton().textContent = text;},\n      setMessageText: (text) => {getText().textContent = text;},\n      setFocus: () => getActionButton().focus(),\n      visibilityIsHidden: () => document.hidden,\n      registerCapturedBlurHandler: (handler) => getActionButton().addEventListener('blur', handler, true),\n      deregisterCapturedBlurHandler: (handler) => getActionButton().removeEventListener('blur', handler, true),\n      registerVisibilityChangeHandler: (handler) => document.addEventListener('visibilitychange', handler),\n      deregisterVisibilityChangeHandler: (handler) => document.removeEventListener('visibilitychange', handler),\n      registerCapturedInteractionHandler: (evt, handler) =>\n        document.body.addEventListener(evt, handler, true),\n      deregisterCapturedInteractionHandler: (evt, handler) =>\n        document.body.removeEventListener(evt, handler, true),\n      registerActionClickHandler: (handler) => getActionButton().addEventListener('click', handler),\n      deregisterActionClickHandler: (handler) => getActionButton().removeEventListener('click', handler),\n      registerTransitionEndHandler:\n        (handler) => this.root_.addEventListener(getCorrectEventName(window, 'transitionend'), handler),\n      deregisterTransitionEndHandler:\n        (handler) => this.root_.removeEventListener(getCorrectEventName(window, 'transitionend'), handler),\n      notifyShow: () => this.emit(MDCSnackbarFoundation.strings.SHOW_EVENT),\n      notifyHide: () => this.emit(MDCSnackbarFoundation.strings.HIDE_EVENT),\n    });\n  }\n\n  get dismissesOnAction() {\n    return this.foundation_.dismissesOnAction();\n  }\n\n  set dismissesOnAction(dismissesOnAction) {\n    this.foundation_.setDismissOnAction(dismissesOnAction);\n  }\n}\n","import { MDCSnackbar } from \"@material/snackbar\";\n\nexport function init(\n  assignUrl,\n  unassignUrl,\n  assignTrans,\n  unassignTrans,\n  assignedTo,\n  unassignedFrom,\n  error,\n  groupUrl,\n) {\n  const snackbar = new MDCSnackbar(document.querySelector(\".mdc-snackbar\"));\n\n  $.ajaxSetup({\n    beforeSend: function(xhr, settings) {\n      if (!bundle.csrfSafeMethod(settings.type) && !this.crossDomain) {\n        xhr.setRequestHeader(\"X-CSRFToken\", bundle.getCsrfToken());\n      }\n    },\n  });\n\n  function clickAssign(el) {\n    const posting = $.post(assignUrl, {\n      pk: el.getAttribute(\"id_pk\"),\n      ppk: el.getAttribute(\"id_ppk\"),\n    });\n    posting.done(function(data) {\n      console.info(data);\n      document.getElementById(\n        el.getAttribute(\"id_pk\"),\n      ).innerHTML = unassignTrans;\n      document.getElementById(el.getAttribute(\"id_pk\")).classList.add(\"added\");\n      document\n        .getElementById(el.getAttribute(\"id_pk\"))\n        .classList.remove(\"removed\");\n      const dataObjAssigned = {\n        message: assignedTo + el.getAttribute(\"name\"),\n      };\n      snackbar.show(dataObjAssigned);\n    });\n    posting.fail(function(data) {\n      console.info(data);\n      const err = {\n        message: error,\n      };\n      snackbar.show(err);\n    });\n  }\n\n  function clickUnassign(el) {\n    const posting = $.post(unassignUrl, {\n      pk: el.getAttribute(\"id_pk\"),\n      ppk: el.getAttribute(\"id_ppk\"),\n    });\n    posting.done(function(data) {\n      console.info(data);\n      document.getElementById(\n        el.getAttribute(\"id_pk\"),\n      ).innerHTML = assignTrans;\n      document\n        .getElementById(el.getAttribute(\"id_pk\"))\n        .classList.remove(\"added\");\n      document\n        .getElementById(el.getAttribute(\"id_pk\"))\n        .classList.add(\"removed\");\n      const dataObjUnassigned = {\n        message: unassignedFrom + el.getAttribute(\"name\"),\n      };\n      snackbar.show(dataObjUnassigned);\n    });\n    posting.fail(function(data) {\n      console.info(data);\n      const err = {\n        message: error,\n      };\n      snackbar.show(err);\n    });\n  }\n\n  [].forEach.call(\n    document.querySelectorAll(\".collection-toggle-assign\"),\n    el => {\n      el.addEventListener(\"click\", () => {\n        if (el.classList.contains(\"removed\")) {\n          clickAssign(el);\n        } else {\n          clickUnassign(el);\n        }\n      });\n    },\n  );\n\n  [].forEach.call(document.querySelectorAll(\".md-48\"), el => {\n    el.addEventListener(\"click\", () => {\n      const hash = el.getAttribute(\"id\");\n      window.location.assign(groupUrl.replace(\"0\", hash));\n    });\n  });\n}\n","\"use strict\";\n\nexport function getCsrfToken() {\n  return document\n    .getElementsByName(\"csrfmiddlewaretoken\")[0]\n    .getAttribute(\"value\");\n}\n\nexport function buildReq(data, method) {\n  if (method.toLowerCase() === \"get\") {\n    return {\n      method: method.toUpperCase(),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else if (method.toLowerCase() === \"post\") {\n    const body = data ? JSON.stringify(data) : \"\";\n    return {\n      method: method.toUpperCase(),\n      body: body,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else {\n    throw Error(`Method ${method} not implemented yet.`);\n  }\n}\n\nexport function updateAssignmentQuestionList(\n  url,\n  questionId,\n  assignmentIdentifier,\n) {\n  const token = getCsrfToken();\n  const data = {\n    question_id: questionId,\n    assignment_identifier: assignmentIdentifier,\n  };\n  const req = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    credentials: \"include\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"X-CSRFToken\": token,\n    },\n  };\n  fetch(url, req)\n    .then(function(resp) {\n      if (!resp.ok) {\n        console.log(resp);\n      } else {\n        // Manipulate DOM\n        const list = document.getElementById(\"question-list\");\n        const card = document.getElementById(questionId);\n        if ($.contains(list, card)) {\n          $(\"#\" + questionId).remove();\n        } else {\n          $(\"#\" + questionId)\n            .find($(\".update-questions-btn\"))\n            .html(\"delete\");\n          const q = $(\"#\" + questionId).detach();\n          q.appendTo($(\"#question-list\"));\n          $(\"#empty-assignment-list\").remove();\n          $(\".search-set\").each(function() {\n            $(this) // eslint-disable-line no-invalid-this\n              .find(\".filter-count\")\n              .empty()\n              .append($(this).find(\".mdc-card:visible\").length); // eslint-disable-line no-invalid-this,max-len\n          });\n          $(\".search-set\").each(function() {\n            $(this) // eslint-disable-line no-invalid-this\n              .find(\".filter-count-total\")\n              .empty()\n              .append($(this).find(\".mdc-card\").length); // eslint-disable-line no-invalid-this,max-len\n          });\n        }\n      }\n    })\n    .catch(function(err) {\n      console.log(err);\n    });\n}\n","import { buildReq } from \"../ajax.js\";\n\nfunction toggleFollower(pk, teacherToggleFollowerUrl, followersTrans) {\n  var posting = $.post(teacherToggleFollowerUrl, {pk: pk});\n  posting.done(function(data) {\n    const followerValue = parseInt(document.getElementById(\"follower-count-\"+pk).innerHTML.substring(11));\n    console.log(data);\n    if (data.action == \"added\") {\n      document.getElementById(\"follower-count-\"+pk).innerHTML = (followersTrans + (followerValue+1));\n    } else if (data.action == \"removed\") {\n      document.getElementById(\"follower-count-\"+pk).innerHTML = (followersTrans + (followerValue-1));\n    }\n  });\n}\n\nexport function init(collectionDetailUrl, toggleFollowerUrl, followersStr){\n\n  $.ajaxSetup({\n      beforeSend: function(xhr, settings) {\n          if (!bundle.csrfSafeMethod(settings.type) && !this.crossDomain) {\n              xhr.setRequestHeader(\"X-CSRFToken\", bundle.getCsrfToken());\n          }\n      }\n  });\n\n  [].forEach.call(document.querySelectorAll(\".mdc-icon-toggle\"), el => {\n    bundle.iconToggle.MDCIconToggle.attachTo(el);\n  });\n\n  [].forEach.call(document.querySelectorAll(\".follower-btn\"), el => {\n    el.addEventListener(\"click\", () => {\n      toggleFollower(el.getAttribute('pk'), toggleFollowerUrl, followersStr);\n    });\n  });\n\n  [].forEach.call(document.querySelectorAll(\".detail-view\"), el => {\n    el.addEventListener(\"click\", () => {\n      window.location.href = collectionDetailUrl.replace(\"0\", el.getAttribute('id'));\n    });\n  });\n\n}\n","export function enumerate(){\n  var counter = 1;\n  $('.number-box:visible').each(function() {\n    var el = $(this).children('.number')[0];\n    if (el.innerHTML == \"\") {\n      el.innerHTML = counter;\n      counter++;\n    }\n    return;\n  });\n}\n\nexport function ajaxJQSetup() {\n  $.ajaxSetup({\n      beforeSend: function(xhr, settings) {\n          if (!bundle.csrfSafeMethod(settings.type) && !this.crossDomain) {\n              xhr.setRequestHeader(\"X-CSRFToken\", bundle.getCsrfToken());\n          }\n      }\n  });\n}\n","import { enumerate, ajaxJQSetup } from \"./collection_functions.js\";\n\nfunction toggleAssignment(pk, ppk, toggleUrl) {\n  var posting = $.post(toggleUrl, {pk: pk, ppk: ppk});\n  posting.done(function(data) {\n    console.info(data);\n  })\n}\n\nexport function init(collectionToggleAssignmentUrl){\n\n  ajaxJQSetup();\n\n  [].forEach.call(document.querySelectorAll(\".mdc-icon-toggle\"), el => {\n    bundle.iconToggle.MDCIconToggle.attachTo(el);\n  });\n\n  [].forEach.call(document.querySelectorAll(\".follower-btn\"), el => {\n    el.addEventListener(\"click\", () => {\n      toggleAssignment(el.getAttribute('pk'), el.getAttribute('ppk'), collectionToggleAssignmentUrl);\n    });\n  });\n\n  enumerate();\n}\n","\"use strict\";\nexport {\n  init as initCollectionDistribute,\n} from \"./_collection/collection_distribute.js\";\nexport { init as initCollectionList } from \"./_collection/collection_list.js\";\nexport { init as initCollectionUpdate } from \"./_collection/collection_update.js\";\nexport { enumerate } from \"./_collection/collection_functions.js\";\n"],"names":["init","assignUrl","unassignUrl","assignTrans","unassignTrans","assignedTo","unassignedFrom","error","groupUrl","snackbar","MDCSnackbar","document","querySelector","$","ajaxSetup","beforeSend","xhr","settings","bundle","csrfSafeMethod","type","crossDomain","setRequestHeader","getCsrfToken","clickAssign","el","posting","post","pk","getAttribute","ppk","done","data","console","info","getElementById","innerHTML","classList","add","remove","dataObjAssigned","message","show","fail","err","clickUnassign","dataObjUnassigned","forEach","call","querySelectorAll","addEventListener","contains","hash","window","location","assign","replace","toggleFollower","teacherToggleFollowerUrl","followersTrans","followerValue","parseInt","substring","log","action","collectionDetailUrl","toggleFollowerUrl","followersStr","iconToggle","MDCIconToggle","attachTo","href","enumerate","counter","each","children","ajaxJQSetup","toggleAssignment","toggleUrl","collectionToggleAssignmentUrl"],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbIi9Vc2Vycy9hcnRodXJheWVzdGFzaGlsZ2VydC9EZXNrdG9wL0RldmVsb3BtZW50L215ZGFsaXRlIHByb2plY3QvZGFsaXRlLW5nL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvYmFzZS9mb3VuZGF0aW9uLmpzIiwiL1VzZXJzL2FydGh1cmF5ZXN0YXNoaWxnZXJ0L0Rlc2t0b3AvRGV2ZWxvcG1lbnQvbXlkYWxpdGUgcHJvamVjdC9kYWxpdGUtbmcvbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9iYXNlL2NvbXBvbmVudC5qcyIsIi9Vc2Vycy9hcnRodXJheWVzdGFzaGlsZ2VydC9EZXNrdG9wL0RldmVsb3BtZW50L215ZGFsaXRlIHByb2plY3QvZGFsaXRlLW5nL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvYmFzZS9pbmRleC5qcyIsIi9Vc2Vycy9hcnRodXJheWVzdGFzaGlsZ2VydC9EZXNrdG9wL0RldmVsb3BtZW50L215ZGFsaXRlIHByb2plY3QvZGFsaXRlLW5nL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvc25hY2tiYXIvY29uc3RhbnRzLmpzIiwiL1VzZXJzL2FydGh1cmF5ZXN0YXNoaWxnZXJ0L0Rlc2t0b3AvRGV2ZWxvcG1lbnQvbXlkYWxpdGUgcHJvamVjdC9kYWxpdGUtbmcvbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9zbmFja2Jhci9mb3VuZGF0aW9uLmpzIiwiL1VzZXJzL2FydGh1cmF5ZXN0YXNoaWxnZXJ0L0Rlc2t0b3AvRGV2ZWxvcG1lbnQvbXlkYWxpdGUgcHJvamVjdC9kYWxpdGUtbmcvbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9hbmltYXRpb24vaW5kZXguanMiLCIvVXNlcnMvYXJ0aHVyYXllc3Rhc2hpbGdlcnQvRGVza3RvcC9EZXZlbG9wbWVudC9teWRhbGl0ZSBwcm9qZWN0L2RhbGl0ZS1uZy9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL3NuYWNrYmFyL2luZGV4LmpzIiwiL1VzZXJzL2FydGh1cmF5ZXN0YXNoaWxnZXJ0L0Rlc2t0b3AvRGV2ZWxvcG1lbnQvbXlkYWxpdGUgcHJvamVjdC9kYWxpdGUtbmcvcGVlcmluc3Qvc3RhdGljL3BlZXJpbnN0L2pzL19jb2xsZWN0aW9uL2NvbGxlY3Rpb25fZGlzdHJpYnV0ZS5qcyIsIi9Vc2Vycy9hcnRodXJheWVzdGFzaGlsZ2VydC9EZXNrdG9wL0RldmVsb3BtZW50L215ZGFsaXRlIHByb2plY3QvZGFsaXRlLW5nL3BlZXJpbnN0L3N0YXRpYy9wZWVyaW5zdC9qcy9hamF4LmpzIiwiL1VzZXJzL2FydGh1cmF5ZXN0YXNoaWxnZXJ0L0Rlc2t0b3AvRGV2ZWxvcG1lbnQvbXlkYWxpdGUgcHJvamVjdC9kYWxpdGUtbmcvcGVlcmluc3Qvc3RhdGljL3BlZXJpbnN0L2pzL19jb2xsZWN0aW9uL2NvbGxlY3Rpb25fbGlzdC5qcyIsIi9Vc2Vycy9hcnRodXJheWVzdGFzaGlsZ2VydC9EZXNrdG9wL0RldmVsb3BtZW50L215ZGFsaXRlIHByb2plY3QvZGFsaXRlLW5nL3BlZXJpbnN0L3N0YXRpYy9wZWVyaW5zdC9qcy9fY29sbGVjdGlvbi9jb2xsZWN0aW9uX2Z1bmN0aW9ucy5qcyIsIi9Vc2Vycy9hcnRodXJheWVzdGFzaGlsZ2VydC9EZXNrdG9wL0RldmVsb3BtZW50L215ZGFsaXRlIHByb2plY3QvZGFsaXRlLW5nL3BlZXJpbnN0L3N0YXRpYy9wZWVyaW5zdC9qcy9fY29sbGVjdGlvbi9jb2xsZWN0aW9uX3VwZGF0ZS5qcyIsIi9Vc2Vycy9hcnRodXJheWVzdGFzaGlsZ2VydC9EZXNrdG9wL0RldmVsb3BtZW50L215ZGFsaXRlIHByb2plY3QvZGFsaXRlLW5nL3BlZXJpbnN0L3N0YXRpYy9wZWVyaW5zdC9qcy9jb2xsZWN0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEdvb2dsZSBJbmMuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4vKipcbiAqIEB0ZW1wbGF0ZSBBXG4gKi9cbmNsYXNzIE1EQ0ZvdW5kYXRpb24ge1xuICAvKiogQHJldHVybiBlbnVte2Nzc0NsYXNzZXN9ICovXG4gIHN0YXRpYyBnZXQgY3NzQ2xhc3NlcygpIHtcbiAgICAvLyBDbGFzc2VzIGV4dGVuZGluZyBNRENGb3VuZGF0aW9uIHNob3VsZCBpbXBsZW1lbnQgdGhpcyBtZXRob2QgdG8gcmV0dXJuIGFuIG9iamVjdCB3aGljaCBleHBvcnRzIGV2ZXJ5XG4gICAgLy8gQ1NTIGNsYXNzIHRoZSBmb3VuZGF0aW9uIGNsYXNzIG5lZWRzIGFzIGEgcHJvcGVydHkuIGUuZy4ge0FDVElWRTogJ21kYy1jb21wb25lbnQtLWFjdGl2ZSd9XG4gICAgcmV0dXJuIHt9O1xuICB9XG5cbiAgLyoqIEByZXR1cm4gZW51bXtzdHJpbmdzfSAqL1xuICBzdGF0aWMgZ2V0IHN0cmluZ3MoKSB7XG4gICAgLy8gQ2xhc3NlcyBleHRlbmRpbmcgTURDRm91bmRhdGlvbiBzaG91bGQgaW1wbGVtZW50IHRoaXMgbWV0aG9kIHRvIHJldHVybiBhbiBvYmplY3Qgd2hpY2ggZXhwb3J0cyBhbGxcbiAgICAvLyBzZW1hbnRpYyBzdHJpbmdzIGFzIGNvbnN0YW50cy4gZS5nLiB7QVJJQV9ST0xFOiAndGFibGlzdCd9XG4gICAgcmV0dXJuIHt9O1xuICB9XG5cbiAgLyoqIEByZXR1cm4gZW51bXtudW1iZXJzfSAqL1xuICBzdGF0aWMgZ2V0IG51bWJlcnMoKSB7XG4gICAgLy8gQ2xhc3NlcyBleHRlbmRpbmcgTURDRm91bmRhdGlvbiBzaG91bGQgaW1wbGVtZW50IHRoaXMgbWV0aG9kIHRvIHJldHVybiBhbiBvYmplY3Qgd2hpY2ggZXhwb3J0cyBhbGxcbiAgICAvLyBvZiBpdHMgc2VtYW50aWMgbnVtYmVycyBhcyBjb25zdGFudHMuIGUuZy4ge0FOSU1BVElPTl9ERUxBWV9NUzogMzUwfVxuICAgIHJldHVybiB7fTtcbiAgfVxuXG4gIC8qKiBAcmV0dXJuIHshT2JqZWN0fSAqL1xuICBzdGF0aWMgZ2V0IGRlZmF1bHRBZGFwdGVyKCkge1xuICAgIC8vIENsYXNzZXMgZXh0ZW5kaW5nIE1EQ0ZvdW5kYXRpb24gbWF5IGNob29zZSB0byBpbXBsZW1lbnQgdGhpcyBnZXR0ZXIgaW4gb3JkZXIgdG8gcHJvdmlkZSBhIGNvbnZlbmllbnRcbiAgICAvLyB3YXkgb2Ygdmlld2luZyB0aGUgbmVjZXNzYXJ5IG1ldGhvZHMgb2YgYW4gYWRhcHRlci4gSW4gdGhlIGZ1dHVyZSwgdGhpcyBjb3VsZCBhbHNvIGJlIHVzZWQgZm9yIGFkYXB0ZXJcbiAgICAvLyB2YWxpZGF0aW9uLlxuICAgIHJldHVybiB7fTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0E9fSBhZGFwdGVyXG4gICAqL1xuICBjb25zdHJ1Y3RvcihhZGFwdGVyID0ge30pIHtcbiAgICAvKiogQHByb3RlY3RlZCB7IUF9ICovXG4gICAgdGhpcy5hZGFwdGVyXyA9IGFkYXB0ZXI7XG4gIH1cblxuICBpbml0KCkge1xuICAgIC8vIFN1YmNsYXNzZXMgc2hvdWxkIG92ZXJyaWRlIHRoaXMgbWV0aG9kIHRvIHBlcmZvcm0gaW5pdGlhbGl6YXRpb24gcm91dGluZXMgKHJlZ2lzdGVyaW5nIGV2ZW50cywgZXRjLilcbiAgfVxuXG4gIGRlc3Ryb3koKSB7XG4gICAgLy8gU3ViY2xhc3NlcyBzaG91bGQgb3ZlcnJpZGUgdGhpcyBtZXRob2QgdG8gcGVyZm9ybSBkZS1pbml0aWFsaXphdGlvbiByb3V0aW5lcyAoZGUtcmVnaXN0ZXJpbmcgZXZlbnRzLCBldGMuKVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IE1EQ0ZvdW5kYXRpb247XG4iLCIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNiBHb29nbGUgSW5jLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IE1EQ0ZvdW5kYXRpb24gZnJvbSAnLi9mb3VuZGF0aW9uJztcblxuLyoqXG4gKiBAdGVtcGxhdGUgRlxuICovXG5jbGFzcyBNRENDb21wb25lbnQge1xuICAvKipcbiAgICogQHBhcmFtIHshRWxlbWVudH0gcm9vdFxuICAgKiBAcmV0dXJuIHshTURDQ29tcG9uZW50fVxuICAgKi9cbiAgc3RhdGljIGF0dGFjaFRvKHJvb3QpIHtcbiAgICAvLyBTdWJjbGFzc2VzIHdoaWNoIGV4dGVuZCBNRENCYXNlIHNob3VsZCBwcm92aWRlIGFuIGF0dGFjaFRvKCkgbWV0aG9kIHRoYXQgdGFrZXMgYSByb290IGVsZW1lbnQgYW5kXG4gICAgLy8gcmV0dXJucyBhbiBpbnN0YW50aWF0ZWQgY29tcG9uZW50IHdpdGggaXRzIHJvb3Qgc2V0IHRvIHRoYXQgZWxlbWVudC4gQWxzbyBub3RlIHRoYXQgaW4gdGhlIGNhc2VzIG9mXG4gICAgLy8gc3ViY2xhc3NlcywgYW4gZXhwbGljaXQgZm91bmRhdGlvbiBjbGFzcyB3aWxsIG5vdCBoYXZlIHRvIGJlIHBhc3NlZCBpbjsgaXQgd2lsbCBzaW1wbHkgYmUgaW5pdGlhbGl6ZWRcbiAgICAvLyBmcm9tIGdldERlZmF1bHRGb3VuZGF0aW9uKCkuXG4gICAgcmV0dXJuIG5ldyBNRENDb21wb25lbnQocm9vdCwgbmV3IE1EQ0ZvdW5kYXRpb24oKSk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHshRWxlbWVudH0gcm9vdFxuICAgKiBAcGFyYW0ge0Y9fSBmb3VuZGF0aW9uXG4gICAqIEBwYXJhbSB7Li4uP30gYXJnc1xuICAgKi9cbiAgY29uc3RydWN0b3Iocm9vdCwgZm91bmRhdGlvbiA9IHVuZGVmaW5lZCwgLi4uYXJncykge1xuICAgIC8qKiBAcHJvdGVjdGVkIHshRWxlbWVudH0gKi9cbiAgICB0aGlzLnJvb3RfID0gcm9vdDtcbiAgICB0aGlzLmluaXRpYWxpemUoLi4uYXJncyk7XG4gICAgLy8gTm90ZSB0aGF0IHdlIGluaXRpYWxpemUgZm91bmRhdGlvbiBoZXJlIGFuZCBub3Qgd2l0aGluIHRoZSBjb25zdHJ1Y3RvcidzIGRlZmF1bHQgcGFyYW0gc28gdGhhdFxuICAgIC8vIHRoaXMucm9vdF8gaXMgZGVmaW5lZCBhbmQgY2FuIGJlIHVzZWQgd2l0aGluIHRoZSBmb3VuZGF0aW9uIGNsYXNzLlxuICAgIC8qKiBAcHJvdGVjdGVkIHshRn0gKi9cbiAgICB0aGlzLmZvdW5kYXRpb25fID0gZm91bmRhdGlvbiA9PT0gdW5kZWZpbmVkID8gdGhpcy5nZXREZWZhdWx0Rm91bmRhdGlvbigpIDogZm91bmRhdGlvbjtcbiAgICB0aGlzLmZvdW5kYXRpb25fLmluaXQoKTtcbiAgICB0aGlzLmluaXRpYWxTeW5jV2l0aERPTSgpO1xuICB9XG5cbiAgaW5pdGlhbGl6ZSgvKiAuLi5hcmdzICovKSB7XG4gICAgLy8gU3ViY2xhc3NlcyBjYW4gb3ZlcnJpZGUgdGhpcyB0byBkbyBhbnkgYWRkaXRpb25hbCBzZXR1cCB3b3JrIHRoYXQgd291bGQgYmUgY29uc2lkZXJlZCBwYXJ0IG9mIGFcbiAgICAvLyBcImNvbnN0cnVjdG9yXCIuIEVzc2VudGlhbGx5LCBpdCBpcyBhIGhvb2sgaW50byB0aGUgcGFyZW50IGNvbnN0cnVjdG9yIGJlZm9yZSB0aGUgZm91bmRhdGlvbiBpc1xuICAgIC8vIGluaXRpYWxpemVkLiBBbnkgYWRkaXRpb25hbCBhcmd1bWVudHMgYmVzaWRlcyByb290IGFuZCBmb3VuZGF0aW9uIHdpbGwgYmUgcGFzc2VkIGluIGhlcmUuXG4gIH1cblxuICAvKipcbiAgICogQHJldHVybiB7IUZ9IGZvdW5kYXRpb25cbiAgICovXG4gIGdldERlZmF1bHRGb3VuZGF0aW9uKCkge1xuICAgIC8vIFN1YmNsYXNzZXMgbXVzdCBvdmVycmlkZSB0aGlzIG1ldGhvZCB0byByZXR1cm4gYSBwcm9wZXJseSBjb25maWd1cmVkIGZvdW5kYXRpb24gY2xhc3MgZm9yIHRoZVxuICAgIC8vIGNvbXBvbmVudC5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1N1YmNsYXNzZXMgbXVzdCBvdmVycmlkZSBnZXREZWZhdWx0Rm91bmRhdGlvbiB0byByZXR1cm4gYSBwcm9wZXJseSBjb25maWd1cmVkICcgK1xuICAgICAgJ2ZvdW5kYXRpb24gY2xhc3MnKTtcbiAgfVxuXG4gIGluaXRpYWxTeW5jV2l0aERPTSgpIHtcbiAgICAvLyBTdWJjbGFzc2VzIHNob3VsZCBvdmVycmlkZSB0aGlzIG1ldGhvZCBpZiB0aGV5IG5lZWQgdG8gcGVyZm9ybSB3b3JrIHRvIHN5bmNocm9uaXplIHdpdGggYSBob3N0IERPTVxuICAgIC8vIG9iamVjdC4gQW4gZXhhbXBsZSBvZiB0aGlzIHdvdWxkIGJlIGEgZm9ybSBjb250cm9sIHdyYXBwZXIgdGhhdCBuZWVkcyB0byBzeW5jaHJvbml6ZSBpdHMgaW50ZXJuYWwgc3RhdGVcbiAgICAvLyB0byBzb21lIHByb3BlcnR5IG9yIGF0dHJpYnV0ZSBvZiB0aGUgaG9zdCBET00uIFBsZWFzZSBub3RlOiB0aGlzIGlzICpub3QqIHRoZSBwbGFjZSB0byBwZXJmb3JtIERPTVxuICAgIC8vIHJlYWRzL3dyaXRlcyB0aGF0IHdvdWxkIGNhdXNlIGxheW91dCAvIHBhaW50LCBhcyB0aGlzIGlzIGNhbGxlZCBzeW5jaHJvbm91c2x5IGZyb20gd2l0aGluIHRoZSBjb25zdHJ1Y3Rvci5cbiAgfVxuXG4gIGRlc3Ryb3koKSB7XG4gICAgLy8gU3ViY2xhc3NlcyBtYXkgaW1wbGVtZW50IHRoaXMgbWV0aG9kIHRvIHJlbGVhc2UgYW55IHJlc291cmNlcyAvIGRlcmVnaXN0ZXIgYW55IGxpc3RlbmVycyB0aGV5IGhhdmVcbiAgICAvLyBhdHRhY2hlZC4gQW4gZXhhbXBsZSBvZiB0aGlzIG1pZ2h0IGJlIGRlcmVnaXN0ZXJpbmcgYSByZXNpemUgZXZlbnQgZnJvbSB0aGUgd2luZG93IG9iamVjdC5cbiAgICB0aGlzLmZvdW5kYXRpb25fLmRlc3Ryb3koKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBXcmFwcGVyIG1ldGhvZCB0byBhZGQgYW4gZXZlbnQgbGlzdGVuZXIgdG8gdGhlIGNvbXBvbmVudCdzIHJvb3QgZWxlbWVudC4gVGhpcyBpcyBtb3N0IHVzZWZ1bCB3aGVuXG4gICAqIGxpc3RlbmluZyBmb3IgY3VzdG9tIGV2ZW50cy5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGV2dFR5cGVcbiAgICogQHBhcmFtIHshRnVuY3Rpb259IGhhbmRsZXJcbiAgICovXG4gIGxpc3RlbihldnRUeXBlLCBoYW5kbGVyKSB7XG4gICAgdGhpcy5yb290Xy5hZGRFdmVudExpc3RlbmVyKGV2dFR5cGUsIGhhbmRsZXIpO1xuICB9XG5cbiAgLyoqXG4gICAqIFdyYXBwZXIgbWV0aG9kIHRvIHJlbW92ZSBhbiBldmVudCBsaXN0ZW5lciB0byB0aGUgY29tcG9uZW50J3Mgcm9vdCBlbGVtZW50LiBUaGlzIGlzIG1vc3QgdXNlZnVsIHdoZW5cbiAgICogdW5saXN0ZW5pbmcgZm9yIGN1c3RvbSBldmVudHMuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBldnRUeXBlXG4gICAqIEBwYXJhbSB7IUZ1bmN0aW9ufSBoYW5kbGVyXG4gICAqL1xuICB1bmxpc3RlbihldnRUeXBlLCBoYW5kbGVyKSB7XG4gICAgdGhpcy5yb290Xy5yZW1vdmVFdmVudExpc3RlbmVyKGV2dFR5cGUsIGhhbmRsZXIpO1xuICB9XG5cbiAgLyoqXG4gICAqIEZpcmVzIGEgY3Jvc3MtYnJvd3Nlci1jb21wYXRpYmxlIGN1c3RvbSBldmVudCBmcm9tIHRoZSBjb21wb25lbnQgcm9vdCBvZiB0aGUgZ2l2ZW4gdHlwZSxcbiAgICogd2l0aCB0aGUgZ2l2ZW4gZGF0YS5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGV2dFR5cGVcbiAgICogQHBhcmFtIHshT2JqZWN0fSBldnREYXRhXG4gICAqIEBwYXJhbSB7Ym9vbGVhbj19IHNob3VsZEJ1YmJsZVxuICAgKi9cbiAgZW1pdChldnRUeXBlLCBldnREYXRhLCBzaG91bGRCdWJibGUgPSBmYWxzZSkge1xuICAgIGxldCBldnQ7XG4gICAgaWYgKHR5cGVvZiBDdXN0b21FdmVudCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgZXZ0ID0gbmV3IEN1c3RvbUV2ZW50KGV2dFR5cGUsIHtcbiAgICAgICAgZGV0YWlsOiBldnREYXRhLFxuICAgICAgICBidWJibGVzOiBzaG91bGRCdWJibGUsXG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgZXZ0ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0N1c3RvbUV2ZW50Jyk7XG4gICAgICBldnQuaW5pdEN1c3RvbUV2ZW50KGV2dFR5cGUsIHNob3VsZEJ1YmJsZSwgZmFsc2UsIGV2dERhdGEpO1xuICAgIH1cblxuICAgIHRoaXMucm9vdF8uZGlzcGF0Y2hFdmVudChldnQpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IE1EQ0NvbXBvbmVudDtcbiIsIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEdvb2dsZSBJbmMuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgTURDRm91bmRhdGlvbiBmcm9tICcuL2ZvdW5kYXRpb24nO1xuaW1wb3J0IE1EQ0NvbXBvbmVudCBmcm9tICcuL2NvbXBvbmVudCc7XG5cbmV4cG9ydCB7TURDRm91bmRhdGlvbiwgTURDQ29tcG9uZW50fTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IDIwMTYgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5leHBvcnQgY29uc3QgY3NzQ2xhc3NlcyA9IHtcbiAgUk9PVDogJ21kYy1zbmFja2JhcicsXG4gIFRFWFQ6ICdtZGMtc25hY2tiYXJfX3RleHQnLFxuICBBQ1RJT05fV1JBUFBFUjogJ21kYy1zbmFja2Jhcl9fYWN0aW9uLXdyYXBwZXInLFxuICBBQ1RJT05fQlVUVE9OOiAnbWRjLXNuYWNrYmFyX19hY3Rpb24tYnV0dG9uJyxcbiAgQUNUSVZFOiAnbWRjLXNuYWNrYmFyLS1hY3RpdmUnLFxuICBNVUxUSUxJTkU6ICdtZGMtc25hY2tiYXItLW11bHRpbGluZScsXG4gIEFDVElPTl9PTl9CT1RUT006ICdtZGMtc25hY2tiYXItLWFjdGlvbi1vbi1ib3R0b20nLFxufTtcblxuZXhwb3J0IGNvbnN0IHN0cmluZ3MgPSB7XG4gIFRFWFRfU0VMRUNUT1I6ICcubWRjLXNuYWNrYmFyX190ZXh0JyxcbiAgQUNUSU9OX1dSQVBQRVJfU0VMRUNUT1I6ICcubWRjLXNuYWNrYmFyX19hY3Rpb24td3JhcHBlcicsXG4gIEFDVElPTl9CVVRUT05fU0VMRUNUT1I6ICcubWRjLXNuYWNrYmFyX19hY3Rpb24tYnV0dG9uJyxcbiAgU0hPV19FVkVOVDogJ01EQ1NuYWNrYmFyOnNob3cnLFxuICBISURFX0VWRU5UOiAnTURDU25hY2tiYXI6aGlkZScsXG59O1xuXG5leHBvcnQgY29uc3QgbnVtYmVycyA9IHtcbiAgTUVTU0FHRV9USU1FT1VUOiAyNzUwLFxufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IDIwMTYgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7TURDRm91bmRhdGlvbn0gZnJvbSAnQG1hdGVyaWFsL2Jhc2UvaW5kZXgnO1xuaW1wb3J0IHtjc3NDbGFzc2VzLCBzdHJpbmdzLCBudW1iZXJzfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1EQ1NuYWNrYmFyRm91bmRhdGlvbiBleHRlbmRzIE1EQ0ZvdW5kYXRpb24ge1xuICBzdGF0aWMgZ2V0IGNzc0NsYXNzZXMoKSB7XG4gICAgcmV0dXJuIGNzc0NsYXNzZXM7XG4gIH1cblxuICBzdGF0aWMgZ2V0IHN0cmluZ3MoKSB7XG4gICAgcmV0dXJuIHN0cmluZ3M7XG4gIH1cblxuICBzdGF0aWMgZ2V0IGRlZmF1bHRBZGFwdGVyKCkge1xuICAgIHJldHVybiB7XG4gICAgICBhZGRDbGFzczogKC8qIGNsYXNzTmFtZTogc3RyaW5nICovKSA9PiB7fSxcbiAgICAgIHJlbW92ZUNsYXNzOiAoLyogY2xhc3NOYW1lOiBzdHJpbmcgKi8pID0+IHt9LFxuICAgICAgc2V0QXJpYUhpZGRlbjogKCkgPT4ge30sXG4gICAgICB1bnNldEFyaWFIaWRkZW46ICgpID0+IHt9LFxuICAgICAgc2V0QWN0aW9uQXJpYUhpZGRlbjogKCkgPT4ge30sXG4gICAgICB1bnNldEFjdGlvbkFyaWFIaWRkZW46ICgpID0+IHt9LFxuICAgICAgc2V0QWN0aW9uVGV4dDogKC8qIGFjdGlvblRleHQ6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICBzZXRNZXNzYWdlVGV4dDogKC8qIG1lc3NhZ2U6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICBzZXRGb2N1czogKCkgPT4ge30sXG4gICAgICB2aXNpYmlsaXR5SXNIaWRkZW46ICgpID0+IC8qIGJvb2xlYW4gKi8gZmFsc2UsXG4gICAgICByZWdpc3RlckNhcHR1cmVkQmx1ckhhbmRsZXI6ICgvKiBoYW5kbGVyOiBFdmVudExpc3RlbmVyICovKSA9PiB7fSxcbiAgICAgIGRlcmVnaXN0ZXJDYXB0dXJlZEJsdXJIYW5kbGVyOiAoLyogaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICByZWdpc3RlclZpc2liaWxpdHlDaGFuZ2VIYW5kbGVyOiAoLyogaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICBkZXJlZ2lzdGVyVmlzaWJpbGl0eUNoYW5nZUhhbmRsZXI6ICgvKiBoYW5kbGVyOiBFdmVudExpc3RlbmVyICovKSA9PiB7fSxcbiAgICAgIHJlZ2lzdGVyQ2FwdHVyZWRJbnRlcmFjdGlvbkhhbmRsZXI6ICgvKiBldnRUeXBlOiBzdHJpbmcsIGhhbmRsZXI6IEV2ZW50TGlzdGVuZXIgKi8pID0+IHt9LFxuICAgICAgZGVyZWdpc3RlckNhcHR1cmVkSW50ZXJhY3Rpb25IYW5kbGVyOiAoLyogZXZ0VHlwZTogc3RyaW5nLCBoYW5kbGVyOiBFdmVudExpc3RlbmVyICovKSA9PiB7fSxcbiAgICAgIHJlZ2lzdGVyQWN0aW9uQ2xpY2tIYW5kbGVyOiAoLyogaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICBkZXJlZ2lzdGVyQWN0aW9uQ2xpY2tIYW5kbGVyOiAoLyogaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICByZWdpc3RlclRyYW5zaXRpb25FbmRIYW5kbGVyOiAoLyogaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICBkZXJlZ2lzdGVyVHJhbnNpdGlvbkVuZEhhbmRsZXI6ICgvKiBoYW5kbGVyOiBFdmVudExpc3RlbmVyICovKSA9PiB7fSxcbiAgICAgIG5vdGlmeVNob3c6ICgpID0+IHt9LFxuICAgICAgbm90aWZ5SGlkZTogKCkgPT4ge30sXG4gICAgfTtcbiAgfVxuXG4gIGdldCBhY3RpdmUoKSB7XG4gICAgcmV0dXJuIHRoaXMuYWN0aXZlXztcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKGFkYXB0ZXIpIHtcbiAgICBzdXBlcihPYmplY3QuYXNzaWduKE1EQ1NuYWNrYmFyRm91bmRhdGlvbi5kZWZhdWx0QWRhcHRlciwgYWRhcHRlcikpO1xuXG4gICAgdGhpcy5hY3RpdmVfID0gZmFsc2U7XG4gICAgdGhpcy5hY3Rpb25XYXNDbGlja2VkXyA9IGZhbHNlO1xuICAgIHRoaXMuZGlzbWlzc09uQWN0aW9uXyA9IHRydWU7XG4gICAgdGhpcy5maXJzdEZvY3VzXyA9IHRydWU7XG4gICAgdGhpcy5wb2ludGVyRG93blJlY29nbml6ZWRfID0gZmFsc2U7XG4gICAgdGhpcy5zbmFja2Jhckhhc0ZvY3VzXyA9IGZhbHNlO1xuICAgIHRoaXMuc25hY2tiYXJEYXRhXyA9IG51bGw7XG4gICAgdGhpcy5xdWV1ZV8gPSBbXTtcbiAgICB0aGlzLmFjdGlvbkNsaWNrSGFuZGxlcl8gPSAoKSA9PiB7XG4gICAgICB0aGlzLmFjdGlvbldhc0NsaWNrZWRfID0gdHJ1ZTtcbiAgICAgIHRoaXMuaW52b2tlQWN0aW9uXygpO1xuICAgIH07XG4gICAgdGhpcy52aXNpYmlsaXR5Y2hhbmdlSGFuZGxlcl8gPSAoKSA9PiB7XG4gICAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lb3V0SWRfKTtcbiAgICAgIHRoaXMuc25hY2tiYXJIYXNGb2N1c18gPSB0cnVlO1xuXG4gICAgICBpZiAoIXRoaXMuYWRhcHRlcl8udmlzaWJpbGl0eUlzSGlkZGVuKCkpIHtcbiAgICAgICAgc2V0VGltZW91dCh0aGlzLmNsZWFudXBfLmJpbmQodGhpcyksIHRoaXMuc25hY2tiYXJEYXRhXy50aW1lb3V0IHx8IG51bWJlcnMuTUVTU0FHRV9USU1FT1VUKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHRoaXMuaW50ZXJhY3Rpb25IYW5kbGVyXyA9IChldnQpID0+IHtcbiAgICAgIGlmIChldnQudHlwZSA9PSAndG91Y2hzdGFydCcgfHwgZXZ0LnR5cGUgPT0gJ21vdXNlZG93bicpIHtcbiAgICAgICAgdGhpcy5wb2ludGVyRG93blJlY29nbml6ZWRfID0gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIHRoaXMuaGFuZGxlUG9zc2libGVUYWJLZXlib2FyZEZvY3VzXyhldnQpO1xuXG4gICAgICBpZiAoZXZ0LnR5cGUgPT0gJ2ZvY3VzJykge1xuICAgICAgICB0aGlzLnBvaW50ZXJEb3duUmVjb2duaXplZF8gPSBmYWxzZTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHRoaXMuYmx1ckhhbmRsZXJfID0gKCkgPT4ge1xuICAgICAgY2xlYXJUaW1lb3V0KHRoaXMudGltZW91dElkXyk7XG4gICAgICB0aGlzLnNuYWNrYmFySGFzRm9jdXNfID0gZmFsc2U7XG4gICAgICB0aGlzLnRpbWVvdXRJZF8gPSBzZXRUaW1lb3V0KHRoaXMuY2xlYW51cF8uYmluZCh0aGlzKSwgdGhpcy5zbmFja2JhckRhdGFfLnRpbWVvdXQgfHwgbnVtYmVycy5NRVNTQUdFX1RJTUVPVVQpO1xuICAgIH07XG4gIH1cblxuICBpbml0KCkge1xuICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJBY3Rpb25DbGlja0hhbmRsZXIodGhpcy5hY3Rpb25DbGlja0hhbmRsZXJfKTtcbiAgICB0aGlzLmFkYXB0ZXJfLnNldEFyaWFIaWRkZW4oKTtcbiAgICB0aGlzLmFkYXB0ZXJfLnNldEFjdGlvbkFyaWFIaWRkZW4oKTtcbiAgfVxuXG4gIGRlc3Ryb3koKSB7XG4gICAgdGhpcy5hZGFwdGVyXy5kZXJlZ2lzdGVyQWN0aW9uQ2xpY2tIYW5kbGVyKHRoaXMuYWN0aW9uQ2xpY2tIYW5kbGVyXyk7XG4gICAgdGhpcy5hZGFwdGVyXy5kZXJlZ2lzdGVyQ2FwdHVyZWRCbHVySGFuZGxlcih0aGlzLmJsdXJIYW5kbGVyXyk7XG4gICAgdGhpcy5hZGFwdGVyXy5kZXJlZ2lzdGVyVmlzaWJpbGl0eUNoYW5nZUhhbmRsZXIodGhpcy52aXNpYmlsaXR5Y2hhbmdlSGFuZGxlcl8pO1xuICAgIFsndG91Y2hzdGFydCcsICdtb3VzZWRvd24nLCAnZm9jdXMnXS5mb3JFYWNoKChldnRUeXBlKSA9PiB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJDYXB0dXJlZEludGVyYWN0aW9uSGFuZGxlcihldnRUeXBlLCB0aGlzLmludGVyYWN0aW9uSGFuZGxlcl8pO1xuICAgIH0pO1xuICB9XG5cbiAgZGlzbWlzc2VzT25BY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuZGlzbWlzc09uQWN0aW9uXztcbiAgfVxuXG4gIHNldERpc21pc3NPbkFjdGlvbihkaXNtaXNzT25BY3Rpb24pIHtcbiAgICB0aGlzLmRpc21pc3NPbkFjdGlvbl8gPSAhIWRpc21pc3NPbkFjdGlvbjtcbiAgfVxuXG4gIHNob3coZGF0YSkge1xuICAgIGlmICghZGF0YSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAnUGxlYXNlIHByb3ZpZGUgYSBkYXRhIG9iamVjdCB3aXRoIGF0IGxlYXN0IGEgbWVzc2FnZSB0byBkaXNwbGF5LicpO1xuICAgIH1cbiAgICBpZiAoIWRhdGEubWVzc2FnZSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdQbGVhc2UgcHJvdmlkZSBhIG1lc3NhZ2UgdG8gYmUgZGlzcGxheWVkLicpO1xuICAgIH1cbiAgICBpZiAoZGF0YS5hY3Rpb25IYW5kbGVyICYmICFkYXRhLmFjdGlvblRleHQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignUGxlYXNlIHByb3ZpZGUgYWN0aW9uIHRleHQgd2l0aCB0aGUgaGFuZGxlci4nKTtcbiAgICB9XG4gICAgaWYgKHRoaXMuYWN0aXZlKSB7XG4gICAgICB0aGlzLnF1ZXVlXy5wdXNoKGRhdGEpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lb3V0SWRfKTtcbiAgICB0aGlzLnNuYWNrYmFyRGF0YV8gPSBkYXRhO1xuICAgIHRoaXMuZmlyc3RGb2N1c18gPSB0cnVlO1xuICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJWaXNpYmlsaXR5Q2hhbmdlSGFuZGxlcih0aGlzLnZpc2liaWxpdHljaGFuZ2VIYW5kbGVyXyk7XG4gICAgdGhpcy5hZGFwdGVyXy5yZWdpc3RlckNhcHR1cmVkQmx1ckhhbmRsZXIodGhpcy5ibHVySGFuZGxlcl8pO1xuICAgIFsndG91Y2hzdGFydCcsICdtb3VzZWRvd24nLCAnZm9jdXMnXS5mb3JFYWNoKChldnRUeXBlKSA9PiB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnJlZ2lzdGVyQ2FwdHVyZWRJbnRlcmFjdGlvbkhhbmRsZXIoZXZ0VHlwZSwgdGhpcy5pbnRlcmFjdGlvbkhhbmRsZXJfKTtcbiAgICB9KTtcblxuICAgIGNvbnN0IHtBQ1RJVkUsIE1VTFRJTElORSwgQUNUSU9OX09OX0JPVFRPTX0gPSBjc3NDbGFzc2VzO1xuXG4gICAgdGhpcy5hZGFwdGVyXy5zZXRNZXNzYWdlVGV4dCh0aGlzLnNuYWNrYmFyRGF0YV8ubWVzc2FnZSk7XG5cbiAgICBpZiAodGhpcy5zbmFja2JhckRhdGFfLm11bHRpbGluZSkge1xuICAgICAgdGhpcy5hZGFwdGVyXy5hZGRDbGFzcyhNVUxUSUxJTkUpO1xuICAgICAgaWYgKHRoaXMuc25hY2tiYXJEYXRhXy5hY3Rpb25PbkJvdHRvbSkge1xuICAgICAgICB0aGlzLmFkYXB0ZXJfLmFkZENsYXNzKEFDVElPTl9PTl9CT1RUT00pO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0aGlzLnNuYWNrYmFyRGF0YV8uYWN0aW9uSGFuZGxlcikge1xuICAgICAgdGhpcy5hZGFwdGVyXy5zZXRBY3Rpb25UZXh0KHRoaXMuc25hY2tiYXJEYXRhXy5hY3Rpb25UZXh0KTtcbiAgICAgIHRoaXMuYWN0aW9uSGFuZGxlcl8gPSB0aGlzLnNuYWNrYmFyRGF0YV8uYWN0aW9uSGFuZGxlcjtcbiAgICAgIHRoaXMuc2V0QWN0aW9uSGlkZGVuXyhmYWxzZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuc2V0QWN0aW9uSGlkZGVuXyh0cnVlKTtcbiAgICAgIHRoaXMuYWN0aW9uSGFuZGxlcl8gPSBudWxsO1xuICAgICAgdGhpcy5hZGFwdGVyXy5zZXRBY3Rpb25UZXh0KG51bGwpO1xuICAgIH1cblxuICAgIHRoaXMuYWN0aXZlXyA9IHRydWU7XG4gICAgdGhpcy5hZGFwdGVyXy5hZGRDbGFzcyhBQ1RJVkUpO1xuICAgIHRoaXMuYWRhcHRlcl8udW5zZXRBcmlhSGlkZGVuKCk7XG4gICAgdGhpcy5hZGFwdGVyXy5ub3RpZnlTaG93KCk7XG5cbiAgICB0aGlzLnRpbWVvdXRJZF8gPSBzZXRUaW1lb3V0KHRoaXMuY2xlYW51cF8uYmluZCh0aGlzKSwgdGhpcy5zbmFja2JhckRhdGFfLnRpbWVvdXQgfHwgbnVtYmVycy5NRVNTQUdFX1RJTUVPVVQpO1xuICB9XG5cbiAgaGFuZGxlUG9zc2libGVUYWJLZXlib2FyZEZvY3VzXygpIHtcbiAgICBjb25zdCBoaWphY2tGb2N1cyA9XG4gICAgICB0aGlzLmZpcnN0Rm9jdXNfICYmICF0aGlzLnBvaW50ZXJEb3duUmVjb2duaXplZF87XG5cbiAgICBpZiAoaGlqYWNrRm9jdXMpIHtcbiAgICAgIHRoaXMuc2V0Rm9jdXNPbkFjdGlvbl8oKTtcbiAgICB9XG5cbiAgICB0aGlzLmZpcnN0Rm9jdXNfID0gZmFsc2U7XG4gIH1cblxuICBzZXRGb2N1c09uQWN0aW9uXygpIHtcbiAgICB0aGlzLmFkYXB0ZXJfLnNldEZvY3VzKCk7XG4gICAgdGhpcy5zbmFja2Jhckhhc0ZvY3VzXyA9IHRydWU7XG4gICAgdGhpcy5maXJzdEZvY3VzXyA9IGZhbHNlO1xuICB9XG5cbiAgaW52b2tlQWN0aW9uXygpIHtcbiAgICB0cnkge1xuICAgICAgaWYgKCF0aGlzLmFjdGlvbkhhbmRsZXJfKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdGhpcy5hY3Rpb25IYW5kbGVyXygpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBpZiAodGhpcy5kaXNtaXNzT25BY3Rpb25fKSB7XG4gICAgICAgIHRoaXMuY2xlYW51cF8oKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBjbGVhbnVwXygpIHtcbiAgICBjb25zdCBhbGxvd0Rpc21pc3NhbCA9ICF0aGlzLnNuYWNrYmFySGFzRm9jdXNfIHx8IHRoaXMuYWN0aW9uV2FzQ2xpY2tlZF87XG5cbiAgICBpZiAoYWxsb3dEaXNtaXNzYWwpIHtcbiAgICAgIGNvbnN0IHtBQ1RJVkUsIE1VTFRJTElORSwgQUNUSU9OX09OX0JPVFRPTX0gPSBjc3NDbGFzc2VzO1xuXG4gICAgICB0aGlzLmFkYXB0ZXJfLnJlbW92ZUNsYXNzKEFDVElWRSk7XG5cbiAgICAgIGNvbnN0IGhhbmRsZXIgPSAoKSA9PiB7XG4gICAgICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVvdXRJZF8pO1xuICAgICAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJUcmFuc2l0aW9uRW5kSGFuZGxlcihoYW5kbGVyKTtcbiAgICAgICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhNVUxUSUxJTkUpO1xuICAgICAgICB0aGlzLmFkYXB0ZXJfLnJlbW92ZUNsYXNzKEFDVElPTl9PTl9CT1RUT00pO1xuICAgICAgICB0aGlzLnNldEFjdGlvbkhpZGRlbl8odHJ1ZSk7XG4gICAgICAgIHRoaXMuYWRhcHRlcl8uc2V0QXJpYUhpZGRlbigpO1xuICAgICAgICB0aGlzLmFjdGl2ZV8gPSBmYWxzZTtcbiAgICAgICAgdGhpcy5zbmFja2Jhckhhc0ZvY3VzXyA9IGZhbHNlO1xuICAgICAgICB0aGlzLmFkYXB0ZXJfLm5vdGlmeUhpZGUoKTtcbiAgICAgICAgdGhpcy5zaG93TmV4dF8oKTtcbiAgICAgIH07XG5cbiAgICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJUcmFuc2l0aW9uRW5kSGFuZGxlcihoYW5kbGVyKTtcbiAgICB9XG4gIH1cblxuICBzaG93TmV4dF8oKSB7XG4gICAgaWYgKCF0aGlzLnF1ZXVlXy5sZW5ndGgpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5zaG93KHRoaXMucXVldWVfLnNoaWZ0KCkpO1xuICB9XG5cbiAgc2V0QWN0aW9uSGlkZGVuXyhpc0hpZGRlbikge1xuICAgIGlmIChpc0hpZGRlbikge1xuICAgICAgdGhpcy5hZGFwdGVyXy5zZXRBY3Rpb25BcmlhSGlkZGVuKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8udW5zZXRBY3Rpb25BcmlhSGlkZGVuKCk7XG4gICAgfVxuICB9XG59XG4iLCIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNiBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLyoqXG4gKiBAdHlwZWRlZiB7e1xuICogICBub1ByZWZpeDogc3RyaW5nLFxuICogICB3ZWJraXRQcmVmaXg6IHN0cmluZyxcbiAqICAgc3R5bGVQcm9wZXJ0eTogc3RyaW5nXG4gKiB9fVxuICovXG5sZXQgVmVuZG9yUHJvcGVydHlNYXBUeXBlO1xuXG4vKiogQGNvbnN0IHtPYmplY3Q8c3RyaW5nLCAhVmVuZG9yUHJvcGVydHlNYXBUeXBlPn0gKi9cbmNvbnN0IGV2ZW50VHlwZU1hcCA9IHtcbiAgJ2FuaW1hdGlvbnN0YXJ0Jzoge1xuICAgIG5vUHJlZml4OiAnYW5pbWF0aW9uc3RhcnQnLFxuICAgIHdlYmtpdFByZWZpeDogJ3dlYmtpdEFuaW1hdGlvblN0YXJ0JyxcbiAgICBzdHlsZVByb3BlcnR5OiAnYW5pbWF0aW9uJyxcbiAgfSxcbiAgJ2FuaW1hdGlvbmVuZCc6IHtcbiAgICBub1ByZWZpeDogJ2FuaW1hdGlvbmVuZCcsXG4gICAgd2Via2l0UHJlZml4OiAnd2Via2l0QW5pbWF0aW9uRW5kJyxcbiAgICBzdHlsZVByb3BlcnR5OiAnYW5pbWF0aW9uJyxcbiAgfSxcbiAgJ2FuaW1hdGlvbml0ZXJhdGlvbic6IHtcbiAgICBub1ByZWZpeDogJ2FuaW1hdGlvbml0ZXJhdGlvbicsXG4gICAgd2Via2l0UHJlZml4OiAnd2Via2l0QW5pbWF0aW9uSXRlcmF0aW9uJyxcbiAgICBzdHlsZVByb3BlcnR5OiAnYW5pbWF0aW9uJyxcbiAgfSxcbiAgJ3RyYW5zaXRpb25lbmQnOiB7XG4gICAgbm9QcmVmaXg6ICd0cmFuc2l0aW9uZW5kJyxcbiAgICB3ZWJraXRQcmVmaXg6ICd3ZWJraXRUcmFuc2l0aW9uRW5kJyxcbiAgICBzdHlsZVByb3BlcnR5OiAndHJhbnNpdGlvbicsXG4gIH0sXG59O1xuXG4vKiogQGNvbnN0IHtPYmplY3Q8c3RyaW5nLCAhVmVuZG9yUHJvcGVydHlNYXBUeXBlPn0gKi9cbmNvbnN0IGNzc1Byb3BlcnR5TWFwID0ge1xuICAnYW5pbWF0aW9uJzoge1xuICAgIG5vUHJlZml4OiAnYW5pbWF0aW9uJyxcbiAgICB3ZWJraXRQcmVmaXg6ICctd2Via2l0LWFuaW1hdGlvbicsXG4gIH0sXG4gICd0cmFuc2Zvcm0nOiB7XG4gICAgbm9QcmVmaXg6ICd0cmFuc2Zvcm0nLFxuICAgIHdlYmtpdFByZWZpeDogJy13ZWJraXQtdHJhbnNmb3JtJyxcbiAgfSxcbiAgJ3RyYW5zaXRpb24nOiB7XG4gICAgbm9QcmVmaXg6ICd0cmFuc2l0aW9uJyxcbiAgICB3ZWJraXRQcmVmaXg6ICctd2Via2l0LXRyYW5zaXRpb24nLFxuICB9LFxufTtcblxuLyoqXG4gKiBAcGFyYW0geyFPYmplY3R9IHdpbmRvd09ialxuICogQHJldHVybiB7Ym9vbGVhbn1cbiAqL1xuZnVuY3Rpb24gaGFzUHJvcGVyU2hhcGUod2luZG93T2JqKSB7XG4gIHJldHVybiAod2luZG93T2JqWydkb2N1bWVudCddICE9PSB1bmRlZmluZWQgJiYgdHlwZW9mIHdpbmRvd09ialsnZG9jdW1lbnQnXVsnY3JlYXRlRWxlbWVudCddID09PSAnZnVuY3Rpb24nKTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gZXZlbnRUeXBlXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICovXG5mdW5jdGlvbiBldmVudEZvdW5kSW5NYXBzKGV2ZW50VHlwZSkge1xuICByZXR1cm4gKGV2ZW50VHlwZSBpbiBldmVudFR5cGVNYXAgfHwgZXZlbnRUeXBlIGluIGNzc1Byb3BlcnR5TWFwKTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gZXZlbnRUeXBlXG4gKiBAcGFyYW0geyFPYmplY3Q8c3RyaW5nLCAhVmVuZG9yUHJvcGVydHlNYXBUeXBlPn0gbWFwXG4gKiBAcGFyYW0geyFFbGVtZW50fSBlbFxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBnZXRKYXZhU2NyaXB0RXZlbnROYW1lKGV2ZW50VHlwZSwgbWFwLCBlbCkge1xuICByZXR1cm4gbWFwW2V2ZW50VHlwZV0uc3R5bGVQcm9wZXJ0eSBpbiBlbC5zdHlsZSA/IG1hcFtldmVudFR5cGVdLm5vUHJlZml4IDogbWFwW2V2ZW50VHlwZV0ud2Via2l0UHJlZml4O1xufVxuXG4vKipcbiAqIEhlbHBlciBmdW5jdGlvbiB0byBkZXRlcm1pbmUgYnJvd3NlciBwcmVmaXggZm9yIENTUzMgYW5pbWF0aW9uIGV2ZW50c1xuICogYW5kIHByb3BlcnR5IG5hbWVzLlxuICogQHBhcmFtIHshT2JqZWN0fSB3aW5kb3dPYmpcbiAqIEBwYXJhbSB7c3RyaW5nfSBldmVudFR5cGVcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZ2V0QW5pbWF0aW9uTmFtZSh3aW5kb3dPYmosIGV2ZW50VHlwZSkge1xuICBpZiAoIWhhc1Byb3BlclNoYXBlKHdpbmRvd09iaikgfHwgIWV2ZW50Rm91bmRJbk1hcHMoZXZlbnRUeXBlKSkge1xuICAgIHJldHVybiBldmVudFR5cGU7XG4gIH1cblxuICBjb25zdCBtYXAgPSAvKiogQHR5cGUgeyFPYmplY3Q8c3RyaW5nLCAhVmVuZG9yUHJvcGVydHlNYXBUeXBlPn0gKi8gKFxuICAgIGV2ZW50VHlwZSBpbiBldmVudFR5cGVNYXAgPyBldmVudFR5cGVNYXAgOiBjc3NQcm9wZXJ0eU1hcFxuICApO1xuICBjb25zdCBlbCA9IHdpbmRvd09ialsnZG9jdW1lbnQnXVsnY3JlYXRlRWxlbWVudCddKCdkaXYnKTtcbiAgbGV0IGV2ZW50TmFtZSA9ICcnO1xuXG4gIGlmIChtYXAgPT09IGV2ZW50VHlwZU1hcCkge1xuICAgIGV2ZW50TmFtZSA9IGdldEphdmFTY3JpcHRFdmVudE5hbWUoZXZlbnRUeXBlLCBtYXAsIGVsKTtcbiAgfSBlbHNlIHtcbiAgICBldmVudE5hbWUgPSBtYXBbZXZlbnRUeXBlXS5ub1ByZWZpeCBpbiBlbC5zdHlsZSA/IG1hcFtldmVudFR5cGVdLm5vUHJlZml4IDogbWFwW2V2ZW50VHlwZV0ud2Via2l0UHJlZml4O1xuICB9XG5cbiAgcmV0dXJuIGV2ZW50TmFtZTtcbn1cblxuLy8gUHVibGljIGZ1bmN0aW9ucyB0byBhY2Nlc3MgZ2V0QW5pbWF0aW9uTmFtZSgpIGZvciBKYXZhU2NyaXB0IGV2ZW50cyBvciBDU1Ncbi8vIHByb3BlcnR5IG5hbWVzLlxuXG5jb25zdCB0cmFuc2Zvcm1TdHlsZVByb3BlcnRpZXMgPSBbJ3RyYW5zZm9ybScsICdXZWJraXRUcmFuc2Zvcm0nLCAnTW96VHJhbnNmb3JtJywgJ09UcmFuc2Zvcm0nLCAnTVNUcmFuc2Zvcm0nXTtcblxuLyoqXG4gKiBAcGFyYW0geyFPYmplY3R9IHdpbmRvd09ialxuICogQHBhcmFtIHtzdHJpbmd9IGV2ZW50VHlwZVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBnZXRDb3JyZWN0RXZlbnROYW1lKHdpbmRvd09iaiwgZXZlbnRUeXBlKSB7XG4gIHJldHVybiBnZXRBbmltYXRpb25OYW1lKHdpbmRvd09iaiwgZXZlbnRUeXBlKTtcbn1cblxuLyoqXG4gKiBAcGFyYW0geyFPYmplY3R9IHdpbmRvd09ialxuICogQHBhcmFtIHtzdHJpbmd9IGV2ZW50VHlwZVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBnZXRDb3JyZWN0UHJvcGVydHlOYW1lKHdpbmRvd09iaiwgZXZlbnRUeXBlKSB7XG4gIHJldHVybiBnZXRBbmltYXRpb25OYW1lKHdpbmRvd09iaiwgZXZlbnRUeXBlKTtcbn1cblxuZXhwb3J0IHt0cmFuc2Zvcm1TdHlsZVByb3BlcnRpZXMsIGdldENvcnJlY3RFdmVudE5hbWUsIGdldENvcnJlY3RQcm9wZXJ0eU5hbWV9O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgMjAxNiBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHtNRENDb21wb25lbnR9IGZyb20gJ0BtYXRlcmlhbC9iYXNlL2luZGV4JztcbmltcG9ydCBNRENTbmFja2JhckZvdW5kYXRpb24gZnJvbSAnLi9mb3VuZGF0aW9uJztcbmltcG9ydCB7Z2V0Q29ycmVjdEV2ZW50TmFtZX0gZnJvbSAnQG1hdGVyaWFsL2FuaW1hdGlvbi9pbmRleCc7XG5cbmV4cG9ydCB7TURDU25hY2tiYXJGb3VuZGF0aW9ufTtcblxuZXhwb3J0IGNsYXNzIE1EQ1NuYWNrYmFyIGV4dGVuZHMgTURDQ29tcG9uZW50IHtcbiAgc3RhdGljIGF0dGFjaFRvKHJvb3QpIHtcbiAgICByZXR1cm4gbmV3IE1EQ1NuYWNrYmFyKHJvb3QpO1xuICB9XG5cbiAgc2hvdyhkYXRhKSB7XG4gICAgdGhpcy5mb3VuZGF0aW9uXy5zaG93KGRhdGEpO1xuICB9XG5cbiAgZ2V0RGVmYXVsdEZvdW5kYXRpb24oKSB7XG4gICAgY29uc3Qge1xuICAgICAgVEVYVF9TRUxFQ1RPUixcbiAgICAgIEFDVElPTl9CVVRUT05fU0VMRUNUT1IsXG4gICAgfSA9IE1EQ1NuYWNrYmFyRm91bmRhdGlvbi5zdHJpbmdzO1xuICAgIGNvbnN0IGdldFRleHQgPSAoKSA9PiB0aGlzLnJvb3RfLnF1ZXJ5U2VsZWN0b3IoVEVYVF9TRUxFQ1RPUik7XG4gICAgY29uc3QgZ2V0QWN0aW9uQnV0dG9uID0gKCkgPT4gdGhpcy5yb290Xy5xdWVyeVNlbGVjdG9yKEFDVElPTl9CVVRUT05fU0VMRUNUT1IpO1xuXG4gICAgLyogZXNsaW50IGJyYWNlLXN0eWxlOiBcIm9mZlwiICovXG4gICAgcmV0dXJuIG5ldyBNRENTbmFja2JhckZvdW5kYXRpb24oe1xuICAgICAgYWRkQ2xhc3M6IChjbGFzc05hbWUpID0+IHRoaXMucm9vdF8uY2xhc3NMaXN0LmFkZChjbGFzc05hbWUpLFxuICAgICAgcmVtb3ZlQ2xhc3M6IChjbGFzc05hbWUpID0+IHRoaXMucm9vdF8uY2xhc3NMaXN0LnJlbW92ZShjbGFzc05hbWUpLFxuICAgICAgc2V0QXJpYUhpZGRlbjogKCkgPT4gdGhpcy5yb290Xy5zZXRBdHRyaWJ1dGUoJ2FyaWEtaGlkZGVuJywgJ3RydWUnKSxcbiAgICAgIHVuc2V0QXJpYUhpZGRlbjogKCkgPT4gdGhpcy5yb290Xy5yZW1vdmVBdHRyaWJ1dGUoJ2FyaWEtaGlkZGVuJyksXG4gICAgICBzZXRBY3Rpb25BcmlhSGlkZGVuOiAoKSA9PiBnZXRBY3Rpb25CdXR0b24oKS5zZXRBdHRyaWJ1dGUoJ2FyaWEtaGlkZGVuJywgJ3RydWUnKSxcbiAgICAgIHVuc2V0QWN0aW9uQXJpYUhpZGRlbjogKCkgPT4gZ2V0QWN0aW9uQnV0dG9uKCkucmVtb3ZlQXR0cmlidXRlKCdhcmlhLWhpZGRlbicpLFxuICAgICAgc2V0QWN0aW9uVGV4dDogKHRleHQpID0+IHtnZXRBY3Rpb25CdXR0b24oKS50ZXh0Q29udGVudCA9IHRleHQ7fSxcbiAgICAgIHNldE1lc3NhZ2VUZXh0OiAodGV4dCkgPT4ge2dldFRleHQoKS50ZXh0Q29udGVudCA9IHRleHQ7fSxcbiAgICAgIHNldEZvY3VzOiAoKSA9PiBnZXRBY3Rpb25CdXR0b24oKS5mb2N1cygpLFxuICAgICAgdmlzaWJpbGl0eUlzSGlkZGVuOiAoKSA9PiBkb2N1bWVudC5oaWRkZW4sXG4gICAgICByZWdpc3RlckNhcHR1cmVkQmx1ckhhbmRsZXI6IChoYW5kbGVyKSA9PiBnZXRBY3Rpb25CdXR0b24oKS5hZGRFdmVudExpc3RlbmVyKCdibHVyJywgaGFuZGxlciwgdHJ1ZSksXG4gICAgICBkZXJlZ2lzdGVyQ2FwdHVyZWRCbHVySGFuZGxlcjogKGhhbmRsZXIpID0+IGdldEFjdGlvbkJ1dHRvbigpLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2JsdXInLCBoYW5kbGVyLCB0cnVlKSxcbiAgICAgIHJlZ2lzdGVyVmlzaWJpbGl0eUNoYW5nZUhhbmRsZXI6IChoYW5kbGVyKSA9PiBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCd2aXNpYmlsaXR5Y2hhbmdlJywgaGFuZGxlciksXG4gICAgICBkZXJlZ2lzdGVyVmlzaWJpbGl0eUNoYW5nZUhhbmRsZXI6IChoYW5kbGVyKSA9PiBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCd2aXNpYmlsaXR5Y2hhbmdlJywgaGFuZGxlciksXG4gICAgICByZWdpc3RlckNhcHR1cmVkSW50ZXJhY3Rpb25IYW5kbGVyOiAoZXZ0LCBoYW5kbGVyKSA9PlxuICAgICAgICBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoZXZ0LCBoYW5kbGVyLCB0cnVlKSxcbiAgICAgIGRlcmVnaXN0ZXJDYXB0dXJlZEludGVyYWN0aW9uSGFuZGxlcjogKGV2dCwgaGFuZGxlcikgPT5cbiAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVFdmVudExpc3RlbmVyKGV2dCwgaGFuZGxlciwgdHJ1ZSksXG4gICAgICByZWdpc3RlckFjdGlvbkNsaWNrSGFuZGxlcjogKGhhbmRsZXIpID0+IGdldEFjdGlvbkJ1dHRvbigpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlciksXG4gICAgICBkZXJlZ2lzdGVyQWN0aW9uQ2xpY2tIYW5kbGVyOiAoaGFuZGxlcikgPT4gZ2V0QWN0aW9uQnV0dG9uKCkucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVyKSxcbiAgICAgIHJlZ2lzdGVyVHJhbnNpdGlvbkVuZEhhbmRsZXI6XG4gICAgICAgIChoYW5kbGVyKSA9PiB0aGlzLnJvb3RfLmFkZEV2ZW50TGlzdGVuZXIoZ2V0Q29ycmVjdEV2ZW50TmFtZSh3aW5kb3csICd0cmFuc2l0aW9uZW5kJyksIGhhbmRsZXIpLFxuICAgICAgZGVyZWdpc3RlclRyYW5zaXRpb25FbmRIYW5kbGVyOlxuICAgICAgICAoaGFuZGxlcikgPT4gdGhpcy5yb290Xy5yZW1vdmVFdmVudExpc3RlbmVyKGdldENvcnJlY3RFdmVudE5hbWUod2luZG93LCAndHJhbnNpdGlvbmVuZCcpLCBoYW5kbGVyKSxcbiAgICAgIG5vdGlmeVNob3c6ICgpID0+IHRoaXMuZW1pdChNRENTbmFja2JhckZvdW5kYXRpb24uc3RyaW5ncy5TSE9XX0VWRU5UKSxcbiAgICAgIG5vdGlmeUhpZGU6ICgpID0+IHRoaXMuZW1pdChNRENTbmFja2JhckZvdW5kYXRpb24uc3RyaW5ncy5ISURFX0VWRU5UKSxcbiAgICB9KTtcbiAgfVxuXG4gIGdldCBkaXNtaXNzZXNPbkFjdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5mb3VuZGF0aW9uXy5kaXNtaXNzZXNPbkFjdGlvbigpO1xuICB9XG5cbiAgc2V0IGRpc21pc3Nlc09uQWN0aW9uKGRpc21pc3Nlc09uQWN0aW9uKSB7XG4gICAgdGhpcy5mb3VuZGF0aW9uXy5zZXREaXNtaXNzT25BY3Rpb24oZGlzbWlzc2VzT25BY3Rpb24pO1xuICB9XG59XG4iLCJpbXBvcnQgeyBNRENTbmFja2JhciB9IGZyb20gXCJAbWF0ZXJpYWwvc25hY2tiYXJcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGluaXQoXG4gIGFzc2lnblVybCxcbiAgdW5hc3NpZ25VcmwsXG4gIGFzc2lnblRyYW5zLFxuICB1bmFzc2lnblRyYW5zLFxuICBhc3NpZ25lZFRvLFxuICB1bmFzc2lnbmVkRnJvbSxcbiAgZXJyb3IsXG4gIGdyb3VwVXJsLFxuKSB7XG4gIGNvbnN0IHNuYWNrYmFyID0gbmV3IE1EQ1NuYWNrYmFyKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubWRjLXNuYWNrYmFyXCIpKTtcblxuICAkLmFqYXhTZXR1cCh7XG4gICAgYmVmb3JlU2VuZDogZnVuY3Rpb24oeGhyLCBzZXR0aW5ncykge1xuICAgICAgaWYgKCFidW5kbGUuY3NyZlNhZmVNZXRob2Qoc2V0dGluZ3MudHlwZSkgJiYgIXRoaXMuY3Jvc3NEb21haW4pIHtcbiAgICAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoXCJYLUNTUkZUb2tlblwiLCBidW5kbGUuZ2V0Q3NyZlRva2VuKCkpO1xuICAgICAgfVxuICAgIH0sXG4gIH0pO1xuXG4gIGZ1bmN0aW9uIGNsaWNrQXNzaWduKGVsKSB7XG4gICAgY29uc3QgcG9zdGluZyA9ICQucG9zdChhc3NpZ25VcmwsIHtcbiAgICAgIHBrOiBlbC5nZXRBdHRyaWJ1dGUoXCJpZF9wa1wiKSxcbiAgICAgIHBwazogZWwuZ2V0QXR0cmlidXRlKFwiaWRfcHBrXCIpLFxuICAgIH0pO1xuICAgIHBvc3RpbmcuZG9uZShmdW5jdGlvbihkYXRhKSB7XG4gICAgICBjb25zb2xlLmluZm8oZGF0YSk7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcbiAgICAgICAgZWwuZ2V0QXR0cmlidXRlKFwiaWRfcGtcIiksXG4gICAgICApLmlubmVySFRNTCA9IHVuYXNzaWduVHJhbnM7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChlbC5nZXRBdHRyaWJ1dGUoXCJpZF9wa1wiKSkuY2xhc3NMaXN0LmFkZChcImFkZGVkXCIpO1xuICAgICAgZG9jdW1lbnRcbiAgICAgICAgLmdldEVsZW1lbnRCeUlkKGVsLmdldEF0dHJpYnV0ZShcImlkX3BrXCIpKVxuICAgICAgICAuY2xhc3NMaXN0LnJlbW92ZShcInJlbW92ZWRcIik7XG4gICAgICBjb25zdCBkYXRhT2JqQXNzaWduZWQgPSB7XG4gICAgICAgIG1lc3NhZ2U6IGFzc2lnbmVkVG8gKyBlbC5nZXRBdHRyaWJ1dGUoXCJuYW1lXCIpLFxuICAgICAgfTtcbiAgICAgIHNuYWNrYmFyLnNob3coZGF0YU9iakFzc2lnbmVkKTtcbiAgICB9KTtcbiAgICBwb3N0aW5nLmZhaWwoZnVuY3Rpb24oZGF0YSkge1xuICAgICAgY29uc29sZS5pbmZvKGRhdGEpO1xuICAgICAgY29uc3QgZXJyID0ge1xuICAgICAgICBtZXNzYWdlOiBlcnJvcixcbiAgICAgIH07XG4gICAgICBzbmFja2Jhci5zaG93KGVycik7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBjbGlja1VuYXNzaWduKGVsKSB7XG4gICAgY29uc3QgcG9zdGluZyA9ICQucG9zdCh1bmFzc2lnblVybCwge1xuICAgICAgcGs6IGVsLmdldEF0dHJpYnV0ZShcImlkX3BrXCIpLFxuICAgICAgcHBrOiBlbC5nZXRBdHRyaWJ1dGUoXCJpZF9wcGtcIiksXG4gICAgfSk7XG4gICAgcG9zdGluZy5kb25lKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgIGNvbnNvbGUuaW5mbyhkYXRhKTtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFxuICAgICAgICBlbC5nZXRBdHRyaWJ1dGUoXCJpZF9wa1wiKSxcbiAgICAgICkuaW5uZXJIVE1MID0gYXNzaWduVHJhbnM7XG4gICAgICBkb2N1bWVudFxuICAgICAgICAuZ2V0RWxlbWVudEJ5SWQoZWwuZ2V0QXR0cmlidXRlKFwiaWRfcGtcIikpXG4gICAgICAgIC5jbGFzc0xpc3QucmVtb3ZlKFwiYWRkZWRcIik7XG4gICAgICBkb2N1bWVudFxuICAgICAgICAuZ2V0RWxlbWVudEJ5SWQoZWwuZ2V0QXR0cmlidXRlKFwiaWRfcGtcIikpXG4gICAgICAgIC5jbGFzc0xpc3QuYWRkKFwicmVtb3ZlZFwiKTtcbiAgICAgIGNvbnN0IGRhdGFPYmpVbmFzc2lnbmVkID0ge1xuICAgICAgICBtZXNzYWdlOiB1bmFzc2lnbmVkRnJvbSArIGVsLmdldEF0dHJpYnV0ZShcIm5hbWVcIiksXG4gICAgICB9O1xuICAgICAgc25hY2tiYXIuc2hvdyhkYXRhT2JqVW5hc3NpZ25lZCk7XG4gICAgfSk7XG4gICAgcG9zdGluZy5mYWlsKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgIGNvbnNvbGUuaW5mbyhkYXRhKTtcbiAgICAgIGNvbnN0IGVyciA9IHtcbiAgICAgICAgbWVzc2FnZTogZXJyb3IsXG4gICAgICB9O1xuICAgICAgc25hY2tiYXIuc2hvdyhlcnIpO1xuICAgIH0pO1xuICB9XG5cbiAgW10uZm9yRWFjaC5jYWxsKFxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuY29sbGVjdGlvbi10b2dnbGUtYXNzaWduXCIpLFxuICAgIGVsID0+IHtcbiAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgIGlmIChlbC5jbGFzc0xpc3QuY29udGFpbnMoXCJyZW1vdmVkXCIpKSB7XG4gICAgICAgICAgY2xpY2tBc3NpZ24oZWwpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNsaWNrVW5hc3NpZ24oZWwpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuICApO1xuXG4gIFtdLmZvckVhY2guY2FsbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLm1kLTQ4XCIpLCBlbCA9PiB7XG4gICAgZWwuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIGNvbnN0IGhhc2ggPSBlbC5nZXRBdHRyaWJ1dGUoXCJpZFwiKTtcbiAgICAgIHdpbmRvdy5sb2NhdGlvbi5hc3NpZ24oZ3JvdXBVcmwucmVwbGFjZShcIjBcIiwgaGFzaCkpO1xuICAgIH0pO1xuICB9KTtcbn1cbiIsIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q3NyZlRva2VuKCkge1xuICByZXR1cm4gZG9jdW1lbnRcbiAgICAuZ2V0RWxlbWVudHNCeU5hbWUoXCJjc3JmbWlkZGxld2FyZXRva2VuXCIpWzBdXG4gICAgLmdldEF0dHJpYnV0ZShcInZhbHVlXCIpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYnVpbGRSZXEoZGF0YSwgbWV0aG9kKSB7XG4gIGlmIChtZXRob2QudG9Mb3dlckNhc2UoKSA9PT0gXCJnZXRcIikge1xuICAgIHJldHVybiB7XG4gICAgICBtZXRob2Q6IG1ldGhvZC50b1VwcGVyQ2FzZSgpLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgXCJYLUNTUkZUb2tlblwiOiBnZXRDc3JmVG9rZW4oKSxcbiAgICAgIH0sXG4gICAgfTtcbiAgfSBlbHNlIGlmIChtZXRob2QudG9Mb3dlckNhc2UoKSA9PT0gXCJwb3N0XCIpIHtcbiAgICBjb25zdCBib2R5ID0gZGF0YSA/IEpTT04uc3RyaW5naWZ5KGRhdGEpIDogXCJcIjtcbiAgICByZXR1cm4ge1xuICAgICAgbWV0aG9kOiBtZXRob2QudG9VcHBlckNhc2UoKSxcbiAgICAgIGJvZHk6IGJvZHksXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICBcIlgtQ1NSRlRva2VuXCI6IGdldENzcmZUb2tlbigpLFxuICAgICAgfSxcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIHRocm93IEVycm9yKGBNZXRob2QgJHttZXRob2R9IG5vdCBpbXBsZW1lbnRlZCB5ZXQuYCk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZUFzc2lnbm1lbnRRdWVzdGlvbkxpc3QoXG4gIHVybCxcbiAgcXVlc3Rpb25JZCxcbiAgYXNzaWdubWVudElkZW50aWZpZXIsXG4pIHtcbiAgY29uc3QgdG9rZW4gPSBnZXRDc3JmVG9rZW4oKTtcbiAgY29uc3QgZGF0YSA9IHtcbiAgICBxdWVzdGlvbl9pZDogcXVlc3Rpb25JZCxcbiAgICBhc3NpZ25tZW50X2lkZW50aWZpZXI6IGFzc2lnbm1lbnRJZGVudGlmaWVyLFxuICB9O1xuICBjb25zdCByZXEgPSB7XG4gICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhKSxcbiAgICBjcmVkZW50aWFsczogXCJpbmNsdWRlXCIsXG4gICAgaGVhZGVyczoge1xuICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICBcIlgtQ1NSRlRva2VuXCI6IHRva2VuLFxuICAgIH0sXG4gIH07XG4gIGZldGNoKHVybCwgcmVxKVxuICAgIC50aGVuKGZ1bmN0aW9uKHJlc3ApIHtcbiAgICAgIGlmICghcmVzcC5vaykge1xuICAgICAgICBjb25zb2xlLmxvZyhyZXNwKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIE1hbmlwdWxhdGUgRE9NXG4gICAgICAgIGNvbnN0IGxpc3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInF1ZXN0aW9uLWxpc3RcIik7XG4gICAgICAgIGNvbnN0IGNhcmQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChxdWVzdGlvbklkKTtcbiAgICAgICAgaWYgKCQuY29udGFpbnMobGlzdCwgY2FyZCkpIHtcbiAgICAgICAgICAkKFwiI1wiICsgcXVlc3Rpb25JZCkucmVtb3ZlKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgJChcIiNcIiArIHF1ZXN0aW9uSWQpXG4gICAgICAgICAgICAuZmluZCgkKFwiLnVwZGF0ZS1xdWVzdGlvbnMtYnRuXCIpKVxuICAgICAgICAgICAgLmh0bWwoXCJkZWxldGVcIik7XG4gICAgICAgICAgY29uc3QgcSA9ICQoXCIjXCIgKyBxdWVzdGlvbklkKS5kZXRhY2goKTtcbiAgICAgICAgICBxLmFwcGVuZFRvKCQoXCIjcXVlc3Rpb24tbGlzdFwiKSk7XG4gICAgICAgICAgJChcIiNlbXB0eS1hc3NpZ25tZW50LWxpc3RcIikucmVtb3ZlKCk7XG4gICAgICAgICAgJChcIi5zZWFyY2gtc2V0XCIpLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAkKHRoaXMpIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8taW52YWxpZC10aGlzXG4gICAgICAgICAgICAgIC5maW5kKFwiLmZpbHRlci1jb3VudFwiKVxuICAgICAgICAgICAgICAuZW1wdHkoKVxuICAgICAgICAgICAgICAuYXBwZW5kKCQodGhpcykuZmluZChcIi5tZGMtY2FyZDp2aXNpYmxlXCIpLmxlbmd0aCk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8taW52YWxpZC10aGlzLG1heC1sZW5cbiAgICAgICAgICB9KTtcbiAgICAgICAgICAkKFwiLnNlYXJjaC1zZXRcIikuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICQodGhpcykgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1pbnZhbGlkLXRoaXNcbiAgICAgICAgICAgICAgLmZpbmQoXCIuZmlsdGVyLWNvdW50LXRvdGFsXCIpXG4gICAgICAgICAgICAgIC5lbXB0eSgpXG4gICAgICAgICAgICAgIC5hcHBlbmQoJCh0aGlzKS5maW5kKFwiLm1kYy1jYXJkXCIpLmxlbmd0aCk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8taW52YWxpZC10aGlzLG1heC1sZW5cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gICAgLmNhdGNoKGZ1bmN0aW9uKGVycikge1xuICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICB9KTtcbn1cbiIsImltcG9ydCB7IGJ1aWxkUmVxIH0gZnJvbSBcIi4uL2FqYXguanNcIjtcblxuZnVuY3Rpb24gdG9nZ2xlRm9sbG93ZXIocGssIHRlYWNoZXJUb2dnbGVGb2xsb3dlclVybCwgZm9sbG93ZXJzVHJhbnMpIHtcbiAgdmFyIHBvc3RpbmcgPSAkLnBvc3QodGVhY2hlclRvZ2dsZUZvbGxvd2VyVXJsLCB7cGs6IHBrfSk7XG4gIHBvc3RpbmcuZG9uZShmdW5jdGlvbihkYXRhKSB7XG4gICAgY29uc3QgZm9sbG93ZXJWYWx1ZSA9IHBhcnNlSW50KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZm9sbG93ZXItY291bnQtXCIrcGspLmlubmVySFRNTC5zdWJzdHJpbmcoMTEpKTtcbiAgICBjb25zb2xlLmxvZyhkYXRhKTtcbiAgICBpZiAoZGF0YS5hY3Rpb24gPT0gXCJhZGRlZFwiKSB7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZvbGxvd2VyLWNvdW50LVwiK3BrKS5pbm5lckhUTUwgPSAoZm9sbG93ZXJzVHJhbnMgKyAoZm9sbG93ZXJWYWx1ZSsxKSk7XG4gICAgfSBlbHNlIGlmIChkYXRhLmFjdGlvbiA9PSBcInJlbW92ZWRcIikge1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmb2xsb3dlci1jb3VudC1cIitwaykuaW5uZXJIVE1MID0gKGZvbGxvd2Vyc1RyYW5zICsgKGZvbGxvd2VyVmFsdWUtMSkpO1xuICAgIH1cbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbml0KGNvbGxlY3Rpb25EZXRhaWxVcmwsIHRvZ2dsZUZvbGxvd2VyVXJsLCBmb2xsb3dlcnNTdHIpe1xuXG4gICQuYWpheFNldHVwKHtcbiAgICAgIGJlZm9yZVNlbmQ6IGZ1bmN0aW9uKHhociwgc2V0dGluZ3MpIHtcbiAgICAgICAgICBpZiAoIWJ1bmRsZS5jc3JmU2FmZU1ldGhvZChzZXR0aW5ncy50eXBlKSAmJiAhdGhpcy5jcm9zc0RvbWFpbikge1xuICAgICAgICAgICAgICB4aHIuc2V0UmVxdWVzdEhlYWRlcihcIlgtQ1NSRlRva2VuXCIsIGJ1bmRsZS5nZXRDc3JmVG9rZW4oKSk7XG4gICAgICAgICAgfVxuICAgICAgfVxuICB9KTtcblxuICBbXS5mb3JFYWNoLmNhbGwoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5tZGMtaWNvbi10b2dnbGVcIiksIGVsID0+IHtcbiAgICBidW5kbGUuaWNvblRvZ2dsZS5NRENJY29uVG9nZ2xlLmF0dGFjaFRvKGVsKTtcbiAgfSk7XG5cbiAgW10uZm9yRWFjaC5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuZm9sbG93ZXItYnRuXCIpLCBlbCA9PiB7XG4gICAgZWwuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIHRvZ2dsZUZvbGxvd2VyKGVsLmdldEF0dHJpYnV0ZSgncGsnKSwgdG9nZ2xlRm9sbG93ZXJVcmwsIGZvbGxvd2Vyc1N0cik7XG4gICAgfSk7XG4gIH0pO1xuXG4gIFtdLmZvckVhY2guY2FsbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmRldGFpbC12aWV3XCIpLCBlbCA9PiB7XG4gICAgZWwuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gY29sbGVjdGlvbkRldGFpbFVybC5yZXBsYWNlKFwiMFwiLCBlbC5nZXRBdHRyaWJ1dGUoJ2lkJykpO1xuICAgIH0pO1xuICB9KTtcblxufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIGVudW1lcmF0ZSgpe1xuICB2YXIgY291bnRlciA9IDE7XG4gICQoJy5udW1iZXItYm94OnZpc2libGUnKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgIHZhciBlbCA9ICQodGhpcykuY2hpbGRyZW4oJy5udW1iZXInKVswXTtcbiAgICBpZiAoZWwuaW5uZXJIVE1MID09IFwiXCIpIHtcbiAgICAgIGVsLmlubmVySFRNTCA9IGNvdW50ZXI7XG4gICAgICBjb3VudGVyKys7XG4gICAgfVxuICAgIHJldHVybjtcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhamF4SlFTZXR1cCgpIHtcbiAgJC5hamF4U2V0dXAoe1xuICAgICAgYmVmb3JlU2VuZDogZnVuY3Rpb24oeGhyLCBzZXR0aW5ncykge1xuICAgICAgICAgIGlmICghYnVuZGxlLmNzcmZTYWZlTWV0aG9kKHNldHRpbmdzLnR5cGUpICYmICF0aGlzLmNyb3NzRG9tYWluKSB7XG4gICAgICAgICAgICAgIHhoci5zZXRSZXF1ZXN0SGVhZGVyKFwiWC1DU1JGVG9rZW5cIiwgYnVuZGxlLmdldENzcmZUb2tlbigpKTtcbiAgICAgICAgICB9XG4gICAgICB9XG4gIH0pO1xufVxuIiwiaW1wb3J0IHsgZW51bWVyYXRlLCBhamF4SlFTZXR1cCB9IGZyb20gXCIuL2NvbGxlY3Rpb25fZnVuY3Rpb25zLmpzXCI7XG5cbmZ1bmN0aW9uIHRvZ2dsZUFzc2lnbm1lbnQocGssIHBwaywgdG9nZ2xlVXJsKSB7XG4gIHZhciBwb3N0aW5nID0gJC5wb3N0KHRvZ2dsZVVybCwge3BrOiBwaywgcHBrOiBwcGt9KTtcbiAgcG9zdGluZy5kb25lKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICBjb25zb2xlLmluZm8oZGF0YSk7XG4gIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbml0KGNvbGxlY3Rpb25Ub2dnbGVBc3NpZ25tZW50VXJsKXtcblxuICBhamF4SlFTZXR1cCgpO1xuXG4gIFtdLmZvckVhY2guY2FsbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLm1kYy1pY29uLXRvZ2dsZVwiKSwgZWwgPT4ge1xuICAgIGJ1bmRsZS5pY29uVG9nZ2xlLk1EQ0ljb25Ub2dnbGUuYXR0YWNoVG8oZWwpO1xuICB9KTtcblxuICBbXS5mb3JFYWNoLmNhbGwoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5mb2xsb3dlci1idG5cIiksIGVsID0+IHtcbiAgICBlbC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgdG9nZ2xlQXNzaWdubWVudChlbC5nZXRBdHRyaWJ1dGUoJ3BrJyksIGVsLmdldEF0dHJpYnV0ZSgncHBrJyksIGNvbGxlY3Rpb25Ub2dnbGVBc3NpZ25tZW50VXJsKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZW51bWVyYXRlKCk7XG59XG4iLCJcInVzZSBzdHJpY3RcIjtcbmV4cG9ydCB7XG4gIGluaXQgYXMgaW5pdENvbGxlY3Rpb25EaXN0cmlidXRlLFxufSBmcm9tIFwiLi9fY29sbGVjdGlvbi9jb2xsZWN0aW9uX2Rpc3RyaWJ1dGUuanNcIjtcbmV4cG9ydCB7IGluaXQgYXMgaW5pdENvbGxlY3Rpb25MaXN0IH0gZnJvbSBcIi4vX2NvbGxlY3Rpb24vY29sbGVjdGlvbl9saXN0LmpzXCI7XG5leHBvcnQgeyBpbml0IGFzIGluaXRDb2xsZWN0aW9uVXBkYXRlIH0gZnJvbSBcIi4vX2NvbGxlY3Rpb24vY29sbGVjdGlvbl91cGRhdGUuanNcIjtcbmV4cG9ydCB7IGVudW1lcmF0ZSB9IGZyb20gXCIuL19jb2xsZWN0aW9uL2NvbGxlY3Rpb25fZnVuY3Rpb25zLmpzXCI7XG4iXSwibmFtZXMiOlsiaW5pdCIsImFzc2lnblVybCIsInVuYXNzaWduVXJsIiwiYXNzaWduVHJhbnMiLCJ1bmFzc2lnblRyYW5zIiwiYXNzaWduZWRUbyIsInVuYXNzaWduZWRGcm9tIiwiZXJyb3IiLCJncm91cFVybCIsInNuYWNrYmFyIiwiTURDU25hY2tiYXIiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCIkIiwiYWpheFNldHVwIiwiYmVmb3JlU2VuZCIsInhociIsInNldHRpbmdzIiwiYnVuZGxlIiwiY3NyZlNhZmVNZXRob2QiLCJ0eXBlIiwiY3Jvc3NEb21haW4iLCJzZXRSZXF1ZXN0SGVhZGVyIiwiZ2V0Q3NyZlRva2VuIiwiY2xpY2tBc3NpZ24iLCJlbCIsInBvc3RpbmciLCJwb3N0IiwicGsiLCJnZXRBdHRyaWJ1dGUiLCJwcGsiLCJkb25lIiwiZGF0YSIsImNvbnNvbGUiLCJpbmZvIiwiZ2V0RWxlbWVudEJ5SWQiLCJpbm5lckhUTUwiLCJjbGFzc0xpc3QiLCJhZGQiLCJyZW1vdmUiLCJkYXRhT2JqQXNzaWduZWQiLCJtZXNzYWdlIiwic2hvdyIsImZhaWwiLCJlcnIiLCJjbGlja1VuYXNzaWduIiwiZGF0YU9ialVuYXNzaWduZWQiLCJmb3JFYWNoIiwiY2FsbCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJhZGRFdmVudExpc3RlbmVyIiwiY29udGFpbnMiLCJoYXNoIiwid2luZG93IiwibG9jYXRpb24iLCJhc3NpZ24iLCJyZXBsYWNlIiwidG9nZ2xlRm9sbG93ZXIiLCJ0ZWFjaGVyVG9nZ2xlRm9sbG93ZXJVcmwiLCJmb2xsb3dlcnNUcmFucyIsImZvbGxvd2VyVmFsdWUiLCJwYXJzZUludCIsInN1YnN0cmluZyIsImxvZyIsImFjdGlvbiIsImNvbGxlY3Rpb25EZXRhaWxVcmwiLCJ0b2dnbGVGb2xsb3dlclVybCIsImZvbGxvd2Vyc1N0ciIsImljb25Ub2dnbGUiLCJNRENJY29uVG9nZ2xlIiwiYXR0YWNoVG8iLCJocmVmIiwiZW51bWVyYXRlIiwiY291bnRlciIsImVhY2giLCJjaGlsZHJlbiIsImFqYXhKUVNldHVwIiwidG9nZ2xlQXNzaWdubWVudCIsInRvZ2dsZVVybCIsImNvbGxlY3Rpb25Ub2dnbGVBc3NpZ25tZW50VXJsIl0sIm1hcHBpbmdzIjoiOzs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFvQkEsTUFBTSxhQUFhLENBQUM7O0VBRWxCLFdBQVcsVUFBVSxHQUFHOzs7SUFHdEIsT0FBTyxFQUFFLENBQUM7R0FDWDs7O0VBR0QsV0FBVyxPQUFPLEdBQUc7OztJQUduQixPQUFPLEVBQUUsQ0FBQztHQUNYOzs7RUFHRCxXQUFXLE9BQU8sR0FBRzs7O0lBR25CLE9BQU8sRUFBRSxDQUFDO0dBQ1g7OztFQUdELFdBQVcsY0FBYyxHQUFHOzs7O0lBSTFCLE9BQU8sRUFBRSxDQUFDO0dBQ1g7Ozs7O0VBS0QsV0FBVyxDQUFDLE9BQU8sR0FBRyxFQUFFLEVBQUU7O0lBRXhCLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDO0dBQ3pCOztFQUVELElBQUksR0FBRzs7R0FFTjs7RUFFRCxPQUFPLEdBQUc7O0dBRVQ7Q0FDRjs7QUNqRUQ7Ozs7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"}